var searchIndex = new Map(JSON.parse('[["gen",{"t":"CHHHSSSHHHHHHHHHH","n":["constants_gen","generate_mode","main","verify_header","FNV_OFFSET_BASIS","FNV_PRIME","UNKNOWN_KIND","calculate_checksum","extract_checksum_from_header","find_matches_in_expr","find_matches_in_stmts","generate_header","normalize_constant_name","parse_clause_arm","parse_clause_mappings","parse_directive_arm","parse_directive_mappings"],"q":[[0,"gen"],[4,"gen::constants_gen"],[17,"alloc::string"],[18,"core::option"],[19,"syn::expr"],[20,"core::ops::function"],[21,"syn::stmt"],[22,"alloc::vec"]],"i":"`````````````````","f":"`{{}b}0{{}d}{{}f}0{{}h}{{{A`{{n{{l{jh}}}}}}{A`{{n{{l{jh}}}}}}}f}{{{A`{Ab}}}{{Ad{f}}}}{{{A`{Af}}{A`{Ahc}}}b{{Al{{A`{{n{Aj}}}}}}}}{{{A`{{n{An}}}}{A`{Ahc}}}b{{Al{{A`{{n{Aj}}}}}}}}{{{A`{{n{{l{jh}}}}}}{A`{{n{{l{jh}}}}}}}j}{{{A`{Ab}}}j}{{{A`{Aj}}}{{Ad{{l{jh}}}}}}{{}{{B`{{l{jh}}}}}}10","D":"B`","p":[[1,"unit"],[1,"never"],[1,"u64"],[1,"i32"],[5,"String",17],[1,"tuple",null,null,1],[1,"slice"],[1,"reference",null,null,1],[1,"str"],[6,"Option",18,null,1],[6,"Expr",19],[0,"mut"],[5,"Arm",19],[10,"FnMut",20],[6,"Stmt",21],[5,"Vec",22]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAMABgA=","P":[[9,"F"],[11,""]]}],["roup",{"t":"CCCCFFFFSSSNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNPPPPPPPPPPPPPPFPPGPPPPPGPPPPPPPPPPGGPPPPPPEPPPPPPPPPPPGPPGPPPPGPFFGPPPPPPPPPGPPFGPPPPPPPPPPPPPPPFPPPPPPPPGPGPPGPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPFPPPPGPPPGPPPPPPPPPGGPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPEEFPPPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONONNNNNNNNNNNNNNNNONNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPPNNNNNHNNNNNHHHHHHHHNNNNNPPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOPPPGNNNNNNNNNNHHHHHHHHHHHNNNNPPFGFFGPPFFFGPPPPFPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNCNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNHNNNNNNHNNNNNNNNNNNHNNNNNNNNN","n":["c_api","ir","lexer","parser","OmpClause","OmpClauseIterator","OmpDirective","OmpStringList","ROUP_LANG_C","ROUP_LANG_FORTRAN_FIXED","ROUP_LANG_FORTRAN_FREE","borrow","","","","borrow_mut","","","","from","","","","into","","","","roup_clause_default_data_sharing","roup_clause_free","roup_clause_iterator_free","roup_clause_iterator_next","roup_clause_kind","roup_clause_reduction_operator","roup_clause_schedule_kind","roup_clause_variables","roup_directive_clause_count","roup_directive_clauses_iter","roup_directive_free","roup_directive_kind","roup_parse","roup_parse_with_language","roup_string_list_free","roup_string_list_get","roup_string_list_len","try_from","","","","try_into","","","","type_id","","","","AcqRel","Acquire","Add","","AddressOf","Affinity","Aligned","Alloc","Allocate","","Allocator","And","Any","ArrayAccess","ArraySection","Atomic","AtomicDefaultMemOrder","AtomicOp","AtomicOperation","Auto","Bare","Barrier","BinaryOp","BinaryOperator","BitwiseAnd","","BitwiseNot","BitwiseOr","","BitwiseXor","","C","Call","Capture","ClauseData","ClauseItem","Close","Collapse","Complex","Concurrent","Conditional","","ConversionError","Copyin","Copyprivate","Cpp","Critical","Custom","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","DefaultKind","Delete","Depend","DependType","Depobj","","Deref","Device","DeviceType","","DirectiveBuilder","DirectiveIR","DirectiveKind","DistSchedule","Distribute","DistributeParallelFor","DistributeParallelForSimd","DistributeSimd","Div","Dynamic","Eq","Error","Expression","","","ExpressionAst","ExpressionKind","Filter","Firstprivate","","Flush","For","ForSimd","Fortran","From","Ge","Generic","Grainsize","Gt","Guided","HasDeviceAddr","Host","Identifier","","","If","In","Inout","IntLiteral","IsDevicePtr","ItemList","Language","Lastprivate","LastprivateModifier","Le","Linear","LinearModifier","LogicalAnd","LogicalNot","LogicalOr","Loop","Lt","Map","MapType","Masked","Master","","Max","MemoryOrder","Metadirective","Min","MinusEqual","Mod","Monotonic","Mul","Multiply","Mutexinoutset","Ne","Negate","Nohost","None","Nonmonotonic","Nothing","NumTasks","NumTeams","NumThreads","Or","Order","OrderKind","Ordered","","Out","Parallel","ParallelFor","ParallelForSimd","ParallelLoop","ParallelMasked","ParallelMaster","ParallelSections","ParallelWorkshare","Parenthesized","Parsed","ParserConfig","Primary","Priority","Private","","ProcBind","","Read","Reduction","ReductionOperator","Ref","Relaxed","Release","","Requires","Runtime","Safelen","Scan","Schedule","ScheduleKind","ScheduleModifier","Section","Sections","SeqCst","Shared","","ShiftLeft","ShiftRight","Simd","","Simdlen","Single","Sink","Source","SourceLocation","Spread","Static","Sub","Subtract","Target","TargetData","TargetEnterData","TargetExitData","TargetParallel","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetUpdate","Task","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeSimd","TeamsLoop","ThreadLimit","Threadprivate","To","ToFrom","UnaryOp","UnaryOperator","Unknown","","Unparsed","Update","UseDeviceAddr","UseDevicePtr","Uval","Val","ValidationContext","ValidationError","Variable","","Workshare","Write","all","array_sections","as_ast","as_str","","barrier","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","build","clauses","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","collapse","column","convert","count_clauses","default","","","","default_none","default_shared","depend","dimensions","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","filter_clauses","find_clause","firstprivate","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","for_loop","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","has_clause","has_structured_block","hash","","","","","","","","","","","","","","","","","","","if_clause","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_all","is_array","is_c_family","is_collapse","is_declare","is_default","is_depend","is_device","is_firstprivate","is_fortran","is_if","is_lastprivate","is_linear","is_loop","is_map","is_num_threads","is_ordered","is_parallel","is_parsed","is_private","is_proc_bind","is_reduction","is_scalar","is_schedule","is_shared","is_simd","is_single_index","is_synchronization","is_target","is_task","is_teams","is_worksharing","kind","","language","","length","line","location","lower_bound","map","name","","new","","","","","","","","nowait","num_threads","num_threads_expr","ordered","ordered_n","original_source","parallel","","parallel_for","parse_expressions","pragma_prefix","private","proc_bind","reduction","schedule","schedule_simple","schedule_with_modifiers","shared","simple","single_index","start","stride","string_only","target","task","taskwait","taskyield","teams","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_string","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unparsed","validate","","with_parsing","with_sections","alignment","allocator","","chunk_size","","condition","data","depend_type","device_num","directive_name","grain","items","","","","","","","","","","","","","","","","","kind","","length","","limit","map_type","mapper","memory_order","modifier","","modifiers","n","","name","num","","","op","operator","priority","step","thread_num","args","array","condition","else_expr","function","indices","left","op","","operand","right","then_expr","ConversionError","InvalidClauseSyntax","UnknownClause","UnknownDirective","Unsupported","borrow","borrow_mut","clone","clone_into","clone_to_uninit","convert_directive","eq","fmt","","from","into","parse_clause_data","parse_depend_type","parse_directive_kind","parse_identifier_list","parse_linear_clause","parse_map_clause","parse_reduction_operator","parse_schedule_clause","to_owned","to_string","try_from","try_into","type_id","ClauseNotAllowed","ConflictingClauses","InvalidCombination","MissingRequiredClause","ValidationContext","ValidationError","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","","is_clause_allowed","new","to_owned","to_string","try_from","","try_into","","type_id","","validate_all","clause1","clause2","clause_name","clauses","directive","","reason","","","required_clause","C","FortranFixed","FortranFree","Language","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","from","into","is_identifier_char","lex_clause","lex_directive","lex_fortran_fixed_sentinel","lex_fortran_free_sentinel","lex_identifier_token","lex_omp","lex_pragma","normalize_fortran_identifier","skip_space1_and_comments","skip_space_and_comments","to_owned","try_from","try_into","type_id","Bare","","Clause","ClauseKind","ClauseRegistry","ClauseRegistryBuilder","ClauseRule","Custom","","Directive","DirectiveRegistry","DirectiveRegistryBuilder","DirectiveRule","Flexible","Generic","Parenthesized","","Parser","Unsupported","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","build","","builder","","clauses","clone","","clone_into","","clone_to_uninit","","default","","","","","eq","","","fmt","","","","","from","","","","","","","","","","into","","","","","","","","","","kind","name","","new","","","openmp","parse","","parse_omp_directive","parse_sequence","parse_with_name","register_bare","register_custom","","register_generic","register_parenthesized","register_with_rule","register_with_rule_mut","to_owned","","to_pragma_string","to_source_string","to_string","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","with_case_insensitive","","","","with_default_rule","","with_language","ALL","","AcqRel","Acquire","Affinity","Aligned","Allocate","Allocator","Assume","Atomic","AtomicCapture","AtomicCompareCapture","AtomicDefaultMemOrder","AtomicRead","AtomicUpdate","AtomicWrite","Barrier","BeginDeclareTarget","Bind","Cancel","CancellationPoint","Capture","Collapse","Compare","Copyin","Copyprivate","Critical","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","Defaultmap","Depend","Depobj","Destroy","Detach","Device","DeviceResident","DeviceType","Dispatch","DistSchedule","Distribute","DistributeParallelDo","DistributeParallelDoSimd","DistributeParallelFor","DistributeParallelForSimd","DistributeParallelLoop","DistributeParallelLoopSimd","DistributeSimd","Do","DoSimd","Doacross","DynamicAllocators","EndDeclareTarget","Error","Exclusive","Fail","Filter","Final","Firstprivate","Flush","For","ForSimd","From","Grainsize","Hint","Holds","If","InReduction","Inbranch","Inclusive","Init","Interop","","IsDevicePtr","Label","Lastprivate","Linear","Link","Loop","Map","Masked","MaskedTaskloop","MaskedTaskloopSimd","Master","Match","Mergeable","Message","Metadirective","NoOpenmp","NoOpenmpRoutines","NoParallelism","Nogroup","Nontemporal","Nothing","Notinbranch","Novariants","Nowait","NumTasks","NumTeams","NumThreads","OpenMpClause","OpenMpDirective","Order","Ordered","","Parallel","ParallelDo","ParallelDoSimd","ParallelFor","ParallelForSimd","ParallelLoop","ParallelLoopSimd","ParallelMasked","ParallelMaskedTaskloop","ParallelMaskedTaskloopSimd","ParallelMaster","ParallelMasterTaskloop","ParallelMasterTaskloopSimd","ParallelSections","Partial","Priority","Private","ProcBind","Public","Reduction","Relaxed","Release","Reproducible","Requires","Reverse","Safelen","Schedule","Scope","Sections","SeqCst","Shared","Simd","Simdlen","Single","Sizes","Target","TargetData","TargetEnterData","TargetExitData","TargetLoop","TargetLoopSimd","TargetParallel","TargetParallelDo","TargetParallelDoSimd","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetParallelLoopSimd","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelDo","TargetTeamsDistributeParallelDoSimd","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeParallelLoop","TargetTeamsDistributeParallelLoopSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetTeamsLoopSimd","TargetUpdate","Task","TaskReduction","Taskgraph","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelDo","TeamsDistributeParallelDoSimd","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeParallelLoop","TeamsDistributeParallelLoopSimd","TeamsDistributeSimd","TeamsLoop","TeamsLoopSimd","ThreadLimit","Threadprivate","Tile","To","UnifiedAddress","UnifiedSharedMemory","Unroll","Untied","Update","UseDeviceAddr","UseDevicePtr","UsesAllocators","Weak","When","as_str","borrow","","borrow_mut","","clause_registry","clone","","clone_into","","clone_to_uninit","","directive_registry","eq","","fmt","","from","","hash","","into","","name","parser","rule","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"roup"],[4,"roup::c_api"],[56,"roup::ir"],[853,"roup::ir::ClauseData"],[903,"roup::ir::ExpressionKind"],[915,"roup::ir::convert"],[944,"roup::ir::validate"],[975,"roup::ir::validate::ValidationError"],[985,"roup::lexer"],[1014,"roup::parser"],[1159,"roup::parser::openmp"],[1395,"std::os::raw"],[1396,"core::result"],[1397,"core::any"],[1398,"roup::ir::variable"],[1399,"alloc::vec"],[1400,"roup::ir::expression"],[1401,"core::option"],[1402,"roup::ir::types"],[1403,"roup::ir::directive"],[1404,"roup::ir::builder"],[1405,"roup::ir::clause"],[1406,"core::ops::function"],[1407,"core::fmt"],[1408,"core::hash"],[1409,"alloc::string"],[1410,"alloc::boxed"],[1411,"roup::parser::directive"],[1412,"roup::parser::clause"],[1413,"nom::internal"]],"i":"```````````A`hln321032103210`````````````````321032103210Db0CdEfEhC`0Cf1E`24DfEd`24`4Ch531`8768787Bj2Dd``D`84DlDj6`::48=88888:`9:`Cl9<;`;```;9999=6=9`Dn<``<Cn=;;;7<?==?8=:`19=229==`=`?=`Cd?0<Ef?`=7=1`=110Cj1251Eh>41?C`0030`0E`800000000?An`<272`2=2`DhDbCf14Ch656``552;6998565==`D`1:;66666666666666666666666666667622Ed`7Bj7Dd::77```Dn:1AhAj;;BfBlBnCd<;CjClCn=Db;DfDhDjDl>C`E`<EbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBn<CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBn5`<0;540001CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj;;BnCd0Cf0Ch0Cj0Cl0Cn0D`0Db0Dd0Df0Dh0Dj0Dl0Dn0C`0E`0Bl0EbAn0B`EdEfEhBh0Bj0Bf0Ah0Aj0Bn<0CdCfChCjClCnD`DbDdDfDhDjDlDn000C`E`BlEbAnB`EdEfEhBhBjBf0AhAj00;<CdCfChCjClCnD`DbDdDfDhDjDlE`EfEhBhBjBfBn0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj103=<====3===<===<9===0==<1<<<<<;8;:14;1Bn310<;:53210000090<0;40000000<252;00<<0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlAnBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj9`;:0G`GbGdGfGhGjGlGnH`3HbHdHfHhHjHlHnI`IbIdIf<IhIjG`GbIlInGfGhJ`JbJd??JfHh;6JhJjGlJlJnK`7HlKbIjKdKfKhKl021Kn0L`012`Lb00000000`00000````````00000Fn000``Lh101111111010100110101010Lj0LlLn1M`2310Mb00`0000000000```````````0000NfN``````0Nb````1021`1MjMhMnMlNd7Lf7Ld7654329180753640878787654329109110065432918076543291807110532`42`6455335558701106543291807654329180765432918076543532NlNj11111100001000001001111100000011101111101000000000011001111100011111111110111110100001110111110111111``110000000000000001111111110111001101010000000000000000000000000001000000000000000001011111111111101010`101010`10101010101`110101010","f":"````````{{}b}00{d{{d{c}}}{}}000{{{d{f}}}{{d{fc}}}{}}000{cc{}}000{{}c{}}000{hb}{hj}{lj}{{lh}b}333{hn}{A`b}{A`l}{A`j}2{AbA`}{{Abb}A`}{nj}{{nb}Ab}{nb}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dAf}000```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}Ah}{AjAl}{{{d{An}}}{{Bb{{d{B`}}}}}}{{{d{An}}}{{d{Bd}}}}{Bf{{d{Bd}}}}{{BhBj}Bl}{d{{d{c}}}{}}0000000000000000000000000000{{{d{f}}}{{d{fc}}}{}}0000000000000000000000000000{{BnBhBj}Bl}{{{d{Bl}}}{{d{{Cb{C`}}}}}}{{{d{Cd}}}Cd}{{{d{Cf}}}Cf}{{{d{Ch}}}Ch}{{{d{Cj}}}Cj}{{{d{Cl}}}Cl}{{{d{Cn}}}Cn}{{{d{D`}}}D`}{{{d{Db}}}Db}{{{d{Dd}}}Dd}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{{d{C`}}}C`}{{{d{E`}}}E`}{{{d{Bl}}}Bl}{{{d{Eb}}}Eb}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{Bh}}}Bh}{{{d{Bj}}}Bj}{{{d{Bf}}}Bf}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{d{d{fc}}}j{}}000000000000000000000000000{{dEj}j}000000000000000000000000000{{Bn{d{Bd}}}Bn}{BhEl}`{{{d{Bl}}c}En{{Fd{{d{C`}}}{{F`{Fb}}}}}}{{BnCn}Bn}{{}Eb}{{}Bh}{{}Bj}{BnBn}0{{BnCl{d{{Cb{{d{Bd}}}}}}}Bn}{{{d{Aj}}}En}{{{d{Cd}}{d{Cd}}}Fb}{{{d{Cf}}{d{Cf}}}Fb}{{{d{Ch}}{d{Ch}}}Fb}{{{d{Cj}}{d{Cj}}}Fb}{{{d{Cl}}{d{Cl}}}Fb}{{{d{Cn}}{d{Cn}}}Fb}{{{d{D`}}{d{D`}}}Fb}{{{d{Db}}{d{Db}}}Fb}{{{d{Dd}}{d{Dd}}}Fb}{{{d{Df}}{d{Df}}}Fb}{{{d{Dh}}{d{Dh}}}Fb}{{{d{Dj}}{d{Dj}}}Fb}{{{d{Dl}}{d{Dl}}}Fb}{{{d{Dn}}{d{Dn}}}Fb}{{{d{C`}}{d{C`}}}Fb}{{{d{E`}}{d{E`}}}Fb}{{{d{Bl}}{d{Bl}}}Fb}{{{d{Eb}}{d{Eb}}}Fb}{{{d{An}}{d{An}}}Fb}{{{d{B`}}{d{B`}}}Fb}{{{d{Ed}}{d{Ed}}}Fb}{{{d{Ef}}{d{Ef}}}Fb}{{{d{Eh}}{d{Eh}}}Fb}{{{d{Bh}}{d{Bh}}}Fb}{{{d{Bj}}{d{Bj}}}Fb}{{{d{Bf}}{d{Bf}}}Fb}{{{d{Ah}}{d{Ah}}}Fb}{{{d{Aj}}{d{Aj}}}Fb}{{{d{Bl}}c}{{Al{{d{C`}}}}}{{Fd{{d{C`}}}{{F`{Fb}}}}}}{{{d{Bl}}c}{{Bb{{d{C`}}}}}{{Fd{{d{C`}}}{{F`{Fb}}}}}}{{Bn{d{{Cb{{d{Bd}}}}}}}Bn}{{{d{Cd}}{d{fFf}}}Fh}0{{{d{Cf}}{d{fFf}}}Fh}0{{{d{Ch}}{d{fFf}}}Fh}0{{{d{Cj}}{d{fFf}}}Fh}0{{{d{Cl}}{d{fFf}}}Fh}0{{{d{Cn}}{d{fFf}}}Fh}0{{{d{D`}}{d{fFf}}}Fh}0{{{d{Db}}{d{fFf}}}Fh}0{{{d{Dd}}{d{fFf}}}Fh}0{{{d{Df}}{d{fFf}}}Fh}0{{{d{Dh}}{d{fFf}}}Fh}0{{{d{Dj}}{d{fFf}}}Fh}0{{{d{Dl}}{d{fFf}}}Fh}0{{{d{Dn}}{d{fFf}}}Fh}0{{{d{C`}}{d{fFf}}}Fh}0{{{d{E`}}{d{fFf}}}Fh}0{{{d{Bl}}{d{fFf}}}Fh}0{{{d{Eb}}{d{fFf}}}Fh}{{{d{An}}{d{fFf}}}Fh}0{{{d{B`}}{d{fFf}}}Fh}{{{d{Ed}}{d{fFf}}}Fh}{{{d{Ef}}{d{fFf}}}Fh}{{{d{Eh}}{d{fFf}}}Fh}{{{d{Bh}}{d{fFf}}}Fh}0{{{d{Bj}}{d{fFf}}}Fh}0{{{d{Bf}}{d{fFf}}}Fh}0{{{d{Ah}}{d{fFf}}}Fh}0{{{d{Aj}}{d{fFf}}}Fh}0{{}Bn}{{Ch{Bb{An}}BhBj}Bl}{cc{}}0000000000000{AnDn}{BfDn}2{AjDn}333333333333{{{d{Bd}}}Bf}44{BfAj}{{{d{Bd}}}Aj}{{{d{Bl}}c}Fb{{Fd{{d{C`}}}{{F`{Fb}}}}}}{{{d{E`}}}Fb}{{{d{Cd}}{d{fc}}}jFj}{{{d{Cf}}{d{fc}}}jFj}{{{d{Ch}}{d{fc}}}jFj}{{{d{Cj}}{d{fc}}}jFj}{{{d{Cl}}{d{fc}}}jFj}{{{d{Cn}}{d{fc}}}jFj}{{{d{D`}}{d{fc}}}jFj}{{{d{Db}}{d{fc}}}jFj}{{{d{Dd}}{d{fc}}}jFj}{{{d{Df}}{d{fc}}}jFj}{{{d{Dh}}{d{fc}}}jFj}{{{d{Dj}}{d{fc}}}jFj}{{{d{Dl}}{d{fc}}}jFj}{{{d{E`}}{d{fc}}}jFj}{{{d{Ef}}{d{fc}}}jFj}{{{d{Eh}}{d{fc}}}jFj}{{{d{Bh}}{d{fc}}}jFj}{{{d{Bj}}{d{fc}}}jFj}{{{d{Bf}}{d{fc}}}jFj}{{Bn{d{Bd}}}Bn}{{}c{}}0000000000000000000000000000{{{d{Ah}}}Fb}{{{d{Aj}}}Fb}{BjFb}{{{d{C`}}}Fb}{{{d{E`}}}Fb}1111211101110{{{d{An}}}Fb}2224221511111{{{d{Bl}}}E`}{B`Ed}{{{d{Bl}}}Bj}{EbBj}{AhBb}{BhEl}{{{d{Bl}}}Bh}2{{BnCf{d{{Cb{{d{Bd}}}}}}}Bn}{Bf{{d{Bd}}}}{{{d{Aj}}}{{d{Bd}}}}{E`Bn}{{E`{Al{C`}}BhBj}Bl}{{FbBj}Eb}{{{d{Bd}}{d{Eb}}}An}{{ElEl}Bh}{{{d{Bd}}}Bf}{{{Bb{An}}{Bb{An}}{Bb{An}}}Ah}{{{d{Bd}}}Aj}{BnBn}{{Bnb}Bn}{{Bn{d{Bd}}}Bn}20{B`d}{{}Bn}{{{Bb{Cn}}BhBj}Bl}1{EbFb}{Bj{{d{Bd}}}}{{Bn{d{{Cb{{d{Bd}}}}}}}Bn}{{BnD`}Bn}{{BnCd{d{{Cb{{d{Bd}}}}}}}Bn}{{BnCh{Bb{{d{Bd}}}}}Bn}{{BnCh}Bn}{{BnCh{Al{Cj}}{Bb{{d{Bd}}}}}Bn}5{{E`BhBj}Bl}{AnAh}{{}Bh}{AhBb}{BjEb}>>{{BhBj}Bl}0?{dc{}}000000000000000000000000000{dFl}0000000000000000000000{c{{Ad{e}}}{}{}}0000000000000000000000000000{{}{{Ad{c}}}{}}0000000000000000000000000000{dAf}0000000000000000000000000000{{{d{Bd}}}An}`{{{d{Bl}}}{{Ad{j{Al{Fn}}}}}}8{{{d{Bd}}{Al{Ah}}}Aj}{G`Bb}{GbBb}{GdBf}{GfBb}{GhBb}{GjAn}{GlBb}{GnCl}{H`An}{GjBb}{HbAn}{HdAl}{HfAl}{HhAl}{HjAl}{HlAl}{HnAl}{I`Al}{IbAl}{IdAl}{IfAl}{GnAl}{IhAl}{IjAl}{G`Al}{GbAl}{IlAl}{InAl}{GfCh}{GhCh}{J`An}{JbAn}{JdAn}{HnBb}0{JfBb}{HhBb}{IjBb}{GfAl}{JhAn}{JjBb}{GlBf}{JlAn}{JnAn}{K`An}{JfDd}{HlCd}{KbAn}:{KdAn}{KfAl}{KhKj}{KlKj}0{Kfd}{KhAl}{KnKj}{KnEf}{L`Eh}{L`Kj}36`````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Lb}}}Lb}{{d{d{fc}}}j{}}{{dEj}j}{{{d{Ld}}BhBj{d{Eb}}}{{Ad{BlLb}}}}{{{d{Lb}}{d{Lb}}}Fb}{{{d{Lb}}{d{fFf}}}Fh}0{cc{}}{{}c{}}{{{d{Lf}}{d{Eb}}}{{Ad{C`Lb}}}}{{{d{Bd}}}{{Ad{ClLb}}}}{{{d{Bd}}}{{Ad{E`Lb}}}}{{{d{Bd}}}{{Al{Dn}}}}{{{d{Bd}}}{{Ad{C`Lb}}}}0{{{d{Bd}}}{{Ad{CdLb}}}}1{dc{}}{dFl}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dAf}``````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Fn}}}Fn}{{d{d{fc}}}j{}}{{dEj}j}{{{d{Fn}}{d{Fn}}}Fb}{{{d{Fn}}{d{fFf}}}Fh}0{cc{}}0{{}c{}}0{{{d{Lh}}{d{C`}}}{{Ad{jFn}}}}{E`Lh}?>==<<;;{{{d{Lh}}{d{{Cb{C`}}}}}{{Ad{j{Al{Fn}}}}}}{LjFl}0{LlFl}{LnAl}1{M`Fl}23{LnFl}1````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Mb}}}Mb}{{d{d{fc}}}j{}}{{dEj}j}{{}Mb}{{{d{Mb}}{d{Mb}}}Fb}{{{d{Mb}}{d{fFf}}}Fh}{cc{}}{{}c{}}{MdFb}{{{d{Bd}}}{{Mf{{d{Bd}}{d{Bd}}}}}}000000{{{d{Bd}}}Fl}11{dc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dAf}```````````````````{d{{d{c}}}{}}000000000{{{d{f}}}{{d{fc}}}{}}000000000{MhMj}{MlMn}{{}Mh}{{}Ml}{LdAl}{{{d{N`}}}N`}{{{d{Nb}}}Nb}{{d{d{fc}}}j{}}0{{dEj}j}0{{}Mj}7{{}Mn}7{{}Nd}{{{d{Nf}}{d{Nf}}}Fb}{{{d{Lf}}{d{Lf}}}Fb}{{{d{Ld}}{d{Ld}}}Fb}{{{d{Nf}}{d{fFf}}}Fh}{{{d{Lf}}{d{fFf}}}Fh}0{{{d{Ld}}{d{fFf}}}Fh}0{cc{}}000000000{{}c{}}000000000{LfNf}{Lfd}{Ldd}{{}Mh}{{}Ml}{{MnMj}Nd}`{{{d{Mn}}{d{Bd}}{d{Mj}}}{{Mf{{d{Bd}}Ld}}}}{{{d{Nd}}{d{Bd}}}{{Mf{{d{Bd}}Ld}}}}{{{d{Bd}}}{{Mf{{d{Bd}}Ld}}}}{{{d{Mj}}{d{Bd}}}{{Mf{{d{Bd}}{Al{Lf}}}}}}{{{d{Mn}}{d{Bd}}{d{Bd}}{d{Mj}}}{{Mf{{d{Bd}}Ld}}}}{{Mh{d{Bd}}}Mh}{{Mh{d{Bd}}{Nh{{d{Bd}}{d{Bd}}}{{F`{{Mf{{d{Bd}}Lf}}}}}}}Mh}{{Ml{d{Bd}}{Nh{{d{Bd}}{d{Bd}}{d{Mj}}}{{F`{{Mf{{d{Bd}}Ld}}}}}}}Ml}{{Ml{d{Bd}}}Ml}3{{Mh{d{Bd}}N`}Mh}{{{d{fMh}}{d{Bd}}N`}{{d{fMh}}}}{dc{}}0{{{d{Ld}}}Fl}{{{d{Lf}}}Fl}{dFl}0{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{dAf}000000000{{MjFb}Mj}{{MhFb}Mh}{{MnFb}Mn}{{MlFb}Ml}{{MhN`}Mh}{{MlNb}Ml}{{NdMb}Nd}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{Nj{{d{Bd}}}}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{}Mj}{{{d{Nl}}}Nl}{{{d{Nj}}}Nj}{{d{d{fc}}}j{}}0{{dEj}j}0{{}Mn}{{{d{Nl}}{d{Nl}}}Fb}{{{d{Nj}}{d{Nj}}}Fb}{{{d{Nl}}{d{fFf}}}Fh}{{{d{Nj}}{d{fFf}}}Fh}{cc{}}0{{{d{Nl}}{d{fc}}}jFj}{{{d{Nj}}{d{fc}}}jFj}{{}c{}}0{Nl{{d{Bd}}}}{{}Nd}{NlN`}{dc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0","D":"CLh","p":[[1,"i32"],[1,"reference",null,null,1],[0,"mut"],[5,"OmpClause",4],[1,"unit"],[5,"OmpClauseIterator",4],[5,"OmpStringList",4],[5,"OmpDirective",4],[8,"c_char",1395],[6,"Result",1396,null,1],[5,"TypeId",1397],[5,"ArraySection",56,1398],[5,"Variable",56,1398],[5,"Vec",1399],[6,"Expression",56,1400],[5,"ExpressionAst",56,1400],[6,"Option",1401,null,1],[1,"str"],[5,"Identifier",56,1398],[5,"SourceLocation",56,1402],[6,"Language",56,1402],[5,"DirectiveIR",56,1403],[5,"DirectiveBuilder",56,1404],[6,"ClauseData",56,1405],[1,"slice"],[6,"ReductionOperator",56,1405],[6,"MapType",56,1405],[6,"ScheduleKind",56,1405],[6,"ScheduleModifier",56,1405],[6,"DependType",56,1405],[6,"DefaultKind",56,1405],[6,"ProcBind",56,1405],[6,"MemoryOrder",56,1405],[6,"AtomicOp",56,1405],[6,"DeviceType",56,1405],[6,"LinearModifier",56,1405],[6,"LastprivateModifier",56,1405],[6,"OrderKind",56,1405],[6,"ClauseItem",56,1405],[6,"DirectiveKind",56,1403],[5,"ParserConfig",56,1400],[6,"ExpressionKind",56,1400],[6,"BinaryOperator",56,1400],[6,"UnaryOperator",56,1400],[1,"u8"],[1,"u32"],[1,"usize"],[17,"Output"],[1,"bool"],[10,"Fn",1406],[5,"Formatter",1407],[8,"Result",1407],[10,"Hasher",1408],[5,"String",1409],[6,"ValidationError",944],[15,"Aligned",853],[15,"Allocate",853],[15,"Allocator",853],[15,"Schedule",853],[15,"DistSchedule",853],[15,"If",853],[15,"Generic",853],[15,"Depend",853],[15,"Device",853],[15,"Grainsize",853],[15,"Private",853],[15,"Firstprivate",853],[15,"Lastprivate",853],[15,"Shared",853],[15,"Reduction",853],[15,"Map",853],[15,"UseDevicePtr",853],[15,"UseDeviceAddr",853],[15,"IsDevicePtr",853],[15,"HasDeviceAddr",853],[15,"Affinity",853],[15,"Linear",853],[15,"Copyin",853],[15,"Copyprivate",853],[15,"Safelen",853],[15,"Simdlen",853],[15,"ThreadLimit",853],[15,"AtomicOperation",853],[15,"Collapse",853],[15,"Ordered",853],[15,"NumThreads",853],[15,"NumTeams",853],[15,"NumTasks",853],[15,"Priority",853],[15,"Filter",853],[15,"Call",903],[15,"ArrayAccess",903],[5,"Box",1410,null,1],[15,"Conditional",903],[15,"BinaryOp",903],[15,"UnaryOp",903],[6,"ConversionError",915],[5,"Directive",1014,1411],[5,"Clause",1014,1412],[5,"ValidationContext",944],[15,"ConflictingClauses",975],[15,"ClauseNotAllowed",975],[15,"InvalidCombination",975],[15,"MissingRequiredClause",975],[6,"Language",985],[1,"char"],[8,"IResult",1413],[5,"ClauseRegistryBuilder",1014,1412],[5,"ClauseRegistry",1014,1412],[5,"DirectiveRegistryBuilder",1014,1411],[5,"DirectiveRegistry",1014,1411],[6,"ClauseRule",1014,1412],[6,"DirectiveRule",1014,1411],[5,"Parser",1014],[6,"ClauseKind",1014,1412],[1,"fn"],[6,"OpenMpDirective",1159],[6,"OpenMpClause",1159]],"r":[[56,1405],[57,1405],[58,1405],[59,1400],[60,1400],[61,1405],[62,1405],[63,1405],[64,1405],[65,1403],[66,1405],[67,1400],[68,1405],[69,1400],[70,1398],[71,1403],[72,1405],[73,1405],[74,1405],[75,1405],[76,1405],[77,1403],[78,1400],[79,1400],[80,1405],[81,1400],[82,1400],[83,1405],[84,1400],[85,1405],[86,1400],[87,1402],[88,1400],[89,1405],[90,1405],[91,1405],[92,1405],[93,1405],[94,1400],[95,1405],[96,1405],[97,1400],[98,915],[99,1405],[100,1405],[101,1402],[102,1403],[103,1405],[104,1403],[105,1403],[106,1403],[107,1403],[108,1403],[109,1405],[110,1405],[111,1405],[112,1405],[113,1405],[114,1405],[115,1403],[116,1400],[117,1405],[118,1405],[119,1405],[120,1404],[121,1403],[122,1403],[123,1405],[124,1403],[125,1403],[126,1403],[127,1403],[128,1400],[129,1405],[130,1400],[131,1403],[132,1400],[133,1405],[134,1405],[135,1400],[136,1400],[137,1405],[138,1405],[139,1405],[140,1403],[141,1403],[142,1403],[143,1402],[144,1405],[145,1400],[146,1405],[147,1405],[148,1400],[149,1405],[150,1405],[151,1405],[152,1398],[153,1405],[154,1400],[155,1405],[156,1405],[157,1405],[158,1400],[159,1405],[160,1405],[161,1402],[162,1405],[163,1405],[164,1400],[165,1405],[166,1405],[167,1405],[168,1400],[169,1405],[170,1403],[171,1400],[172,1405],[173,1405],[174,1403],[175,1405],[176,1403],[177,1405],[178,1405],[179,1403],[180,1405],[181,1405],[182,1400],[183,1405],[184,1400],[185,1405],[186,1405],[187,1400],[188,1400],[189,1405],[190,1405],[191,1405],[192,1403],[193,1405],[194,1405],[195,1405],[196,1400],[197,1405],[198,1405],[199,1405],[200,1403],[201,1405],[202,1403],[203,1403],[204,1403],[205,1403],[206,1403],[207,1403],[208,1403],[209,1403],[210,1400],[211,1400],[212,1400],[213,1405],[214,1405],[215,1405],[216,1405],[217,1405],[218,1405],[219,1405],[220,1405],[221,1405],[222,1405],[223,1405],[224,1405],[225,1405],[226,1403],[227,1405],[228,1405],[229,1403],[230,1405],[231,1405],[232,1405],[233,1403],[234,1403],[235,1405],[236,1405],[237,1405],[238,1400],[239,1400],[240,1405],[241,1403],[242,1405],[243,1403],[244,1405],[245,1405],[246,1402],[247,1405],[248,1405],[249,1400],[250,1405],[251,1403],[252,1403],[253,1403],[254,1403],[255,1403],[256,1403],[257,1403],[258,1403],[259,1403],[260,1403],[261,1403],[262,1403],[263,1403],[264,1403],[265,1403],[266,1403],[267,1403],[268,1403],[269,1403],[270,1403],[271,1403],[272,1403],[273,1403],[274,1403],[275,1403],[276,1403],[277,1403],[278,1403],[279,1405],[280,1403],[281,1405],[282,1405],[283,1400],[284,1400],[285,1403],[286,1402],[287,1400],[288,1405],[289,1405],[290,1405],[291,1405],[292,1405],[293,944],[294,944],[295,1398],[296,1405],[297,1403],[298,1405],[299,1398],[300,1398],[301,1400],[302,1400],[303,1398],[304,1403],[305,1404],[306,1405],[307,1405],[308,1405],[309,1405],[310,1405],[311,1405],[312,1405],[313,1405],[314,1405],[315,1405],[316,1405],[317,1405],[318,1405],[319,1405],[320,1405],[321,1403],[322,1403],[323,1400],[324,1400],[325,1400],[326,1400],[327,1400],[328,1400],[329,1402],[330,1402],[331,1398],[332,1398],[333,1398],[334,1404],[335,1405],[336,1405],[337,1405],[338,1405],[339,1405],[340,1405],[341,1405],[342,1405],[343,1405],[344,1405],[345,1405],[346,1405],[347,1405],[348,1405],[349,1405],[350,1403],[351,1403],[352,1400],[353,1400],[354,1400],[355,1400],[356,1400],[357,1400],[358,1402],[359,1402],[360,1398],[361,1398],[362,1398],[363,1404],[364,1403],[365,1405],[366,1405],[367,1405],[368,1405],[369,1405],[370,1405],[371,1405],[372,1405],[373,1405],[374,1405],[375,1405],[376,1405],[377,1405],[378,1405],[379,1405],[380,1403],[381,1403],[382,1400],[383,1400],[384,1400],[385,1400],[386,1400],[387,1400],[388,1402],[389,1402],[390,1398],[391,1398],[392,1398],[393,1405],[394,1405],[395,1405],[396,1405],[397,1405],[398,1405],[399,1405],[400,1405],[401,1405],[402,1405],[403,1405],[404,1405],[405,1405],[406,1405],[407,1405],[408,1403],[409,1403],[410,1400],[411,1400],[412,1400],[413,1400],[414,1400],[415,1400],[416,1402],[417,1402],[418,1398],[419,1398],[420,1398],[421,1405],[422,1405],[423,1405],[424,1405],[425,1405],[426,1405],[427,1405],[428,1405],[429,1405],[430,1405],[431,1405],[432,1405],[433,1405],[434,1405],[435,1405],[436,1403],[437,1403],[438,1400],[439,1400],[440,1400],[441,1400],[442,1400],[443,1400],[444,1402],[445,1402],[446,1398],[447,1398],[448,1398],[449,1404],[450,1402],[452,1403],[453,1404],[454,1400],[455,1402],[456,1402],[457,1404],[458,1404],[459,1404],[460,1398],[461,1405],[462,1405],[463,1405],[464,1405],[465,1405],[466,1405],[467,1405],[468,1405],[469,1405],[470,1405],[471,1405],[472,1405],[473,1405],[474,1405],[475,1405],[476,1403],[477,1403],[478,1400],[479,1400],[480,1400],[481,1400],[482,1400],[483,1400],[484,1402],[485,1402],[486,1398],[487,1398],[488,1398],[489,1403],[490,1403],[491,1404],[492,1405],[493,1405],[494,1405],[495,1405],[496,1405],[497,1405],[498,1405],[499,1405],[500,1405],[501,1405],[502,1405],[503,1405],[504,1405],[505,1405],[506,1405],[507,1405],[508,1405],[509,1405],[510,1405],[511,1405],[512,1405],[513,1405],[514,1405],[515,1405],[516,1405],[517,1405],[518,1405],[519,1405],[520,1405],[521,1405],[522,1403],[523,1403],[524,1403],[525,1403],[526,1400],[527,1400],[528,1400],[529,1400],[530,1400],[531,1400],[532,1400],[533,1402],[534,1402],[535,1402],[536,1402],[537,1398],[538,1398],[539,1398],[540,1398],[541,1398],[542,1398],[543,1404],[544,1403],[545,1404],[546,1405],[547,1405],[548,1405],[549,1405],[550,1405],[551,1405],[552,1405],[553,1405],[554,1405],[555,1405],[556,1405],[557,1405],[558,1405],[559,1405],[560,1405],[561,1405],[562,1405],[563,1405],[564,1403],[565,1403],[566,1400],[567,1400],[568,1400],[569,1400],[570,1400],[571,1400],[572,1402],[573,1402],[574,1398],[575,1398],[576,1398],[577,1398],[578,1398],[579,1398],[580,1403],[581,1403],[582,1405],[583,1405],[584,1405],[585,1405],[586,1405],[587,1405],[588,1405],[589,1405],[590,1405],[591,1405],[592,1405],[593,1405],[594,1405],[595,1403],[596,1400],[597,1400],[598,1402],[599,1402],[600,1398],[601,1404],[602,1404],[603,1405],[604,1405],[605,1405],[606,1405],[607,1405],[608,1405],[609,1405],[610,1405],[611,1405],[612,1405],[613,1405],[614,1405],[615,1405],[616,1405],[617,1405],[618,1403],[619,1403],[620,1400],[621,1400],[622,1400],[623,1400],[624,1400],[625,1400],[626,1402],[627,1402],[628,1398],[629,1398],[630,1398],[631,1398],[632,1398],[633,1402],[634,1405],[635,1403],[636,1405],[637,1405],[638,1405],[639,1405],[640,1402],[641,1405],[642,1405],[643,1405],[644,1403],[645,1405],[646,1405],[647,1405],[648,1403],[649,1400],[650,1405],[651,1405],[652,1405],[653,1398],[654,1405],[655,1405],[656,1403],[657,1398],[658,1403],[659,1403],[660,1403],[661,1403],[662,1403],[663,1403],[664,1400],[665,1403],[666,1400],[667,1398],[668,1402],[669,1403],[670,1398],[671,1404],[672,1398],[673,1398],[674,1404],[675,1403],[676,1400],[677,1400],[678,1402],[679,1398],[680,1398],[681,1398],[682,1404],[683,1404],[684,1404],[685,1404],[686,1404],[687,1400],[688,1404],[689,1403],[690,1404],[691,1400],[692,1402],[693,1404],[694,1404],[695,1404],[696,1404],[697,1404],[698,1404],[699,1404],[700,1403],[701,1398],[702,1402],[703,1398],[704,1400],[705,1404],[706,1404],[707,1403],[708,1403],[709,1404],[710,1405],[711,1405],[712,1405],[713,1405],[714,1405],[715,1405],[716,1405],[717,1405],[718,1405],[719,1405],[720,1405],[721,1405],[722,1405],[723,1405],[724,1405],[725,1403],[726,1403],[727,1400],[728,1400],[729,1400],[730,1400],[731,1400],[732,1400],[733,1402],[734,1402],[735,1398],[736,1398],[737,1398],[738,1405],[739,1405],[740,1405],[741,1405],[742,1405],[743,1405],[744,1405],[745,1405],[746,1405],[747,1405],[748,1405],[749,1405],[750,1405],[751,1405],[752,1405],[753,1403],[754,1403],[755,1400],[756,1402],[757,1402],[758,1398],[759,1398],[760,1398],[761,1404],[762,1405],[763,1405],[764,1405],[765,1405],[766,1405],[767,1405],[768,1405],[769,1405],[770,1405],[771,1405],[772,1405],[773,1405],[774,1405],[775,1405],[776,1405],[777,1403],[778,1403],[779,1400],[780,1400],[781,1400],[782,1400],[783,1400],[784,1400],[785,1402],[786,1402],[787,1398],[788,1398],[789,1398],[790,1404],[791,1405],[792,1405],[793,1405],[794,1405],[795,1405],[796,1405],[797,1405],[798,1405],[799,1405],[800,1405],[801,1405],[802,1405],[803,1405],[804,1405],[805,1405],[806,1403],[807,1403],[808,1400],[809,1400],[810,1400],[811,1400],[812,1400],[813,1400],[814,1402],[815,1402],[816,1398],[817,1398],[818,1398],[819,1404],[820,1405],[821,1405],[822,1405],[823,1405],[824,1405],[825,1405],[826,1405],[827,1405],[828,1405],[829,1405],[830,1405],[831,1405],[832,1405],[833,1405],[834,1405],[835,1403],[836,1403],[837,1400],[838,1400],[839,1400],[840,1400],[841,1400],[842,1400],[843,1402],[844,1402],[845,1398],[846,1398],[847,1398],[848,1400],[850,1403],[851,1400],[852,1398],[1014,1412],[1015,1412],[1016,1412],[1017,1412],[1018,1412],[1019,1412],[1020,1412],[1021,1412],[1022,1411],[1023,1411],[1024,1411],[1025,1411],[1026,1411],[1027,1412],[1028,1411],[1029,1412],[1030,1412],[1032,1412],[1033,1412],[1034,1412],[1035,1411],[1036,1411],[1038,1412],[1039,1412],[1040,1412],[1041,1411],[1042,1411],[1043,1412],[1044,1412],[1045,1411],[1046,1411],[1048,1412],[1049,1412],[1050,1412],[1051,1411],[1052,1411],[1053,1412],[1054,1411],[1055,1412],[1056,1411],[1057,1411],[1058,1412],[1059,1411],[1060,1412],[1061,1411],[1062,1412],[1063,1411],[1064,1412],[1065,1412],[1066,1411],[1067,1411],[1069,1412],[1070,1412],[1071,1411],[1072,1412],[1073,1412],[1074,1412],[1075,1411],[1076,1411],[1077,1412],[1078,1412],[1079,1411],[1080,1411],[1082,1412],[1083,1412],[1084,1412],[1085,1411],[1086,1411],[1087,1412],[1088,1412],[1089,1411],[1090,1411],[1092,1412],[1093,1412],[1094,1412],[1095,1411],[1096,1411],[1097,1412],[1098,1412],[1099,1411],[1100,1412],[1101,1411],[1104,1411],[1107,1412],[1108,1411],[1109,1412],[1110,1412],[1111,1411],[1112,1411],[1113,1412],[1114,1412],[1115,1412],[1116,1412],[1117,1411],[1118,1411],[1119,1412],[1120,1412],[1121,1411],[1122,1412],[1123,1412],[1124,1411],[1125,1411],[1127,1412],[1128,1412],[1129,1412],[1130,1411],[1131,1411],[1132,1412],[1133,1412],[1134,1411],[1135,1411],[1137,1412],[1138,1412],[1139,1412],[1140,1411],[1141,1411],[1142,1412],[1143,1412],[1144,1411],[1145,1411],[1147,1412],[1148,1412],[1149,1412],[1150,1411],[1151,1411],[1152,1412],[1153,1412],[1154,1411],[1155,1411],[1156,1412],[1157,1411]],"b":[[492,"impl-Debug-for-ReductionOperator"],[493,"impl-Display-for-ReductionOperator"],[494,"impl-Display-for-MapType"],[495,"impl-Debug-for-MapType"],[496,"impl-Display-for-ScheduleKind"],[497,"impl-Debug-for-ScheduleKind"],[498,"impl-Display-for-ScheduleModifier"],[499,"impl-Debug-for-ScheduleModifier"],[500,"impl-Display-for-DependType"],[501,"impl-Debug-for-DependType"],[502,"impl-Debug-for-DefaultKind"],[503,"impl-Display-for-DefaultKind"],[504,"impl-Debug-for-ProcBind"],[505,"impl-Display-for-ProcBind"],[506,"impl-Debug-for-MemoryOrder"],[507,"impl-Display-for-MemoryOrder"],[508,"impl-Display-for-AtomicOp"],[509,"impl-Debug-for-AtomicOp"],[510,"impl-Debug-for-DeviceType"],[511,"impl-Display-for-DeviceType"],[512,"impl-Debug-for-LinearModifier"],[513,"impl-Display-for-LinearModifier"],[514,"impl-Debug-for-LastprivateModifier"],[515,"impl-Display-for-LastprivateModifier"],[516,"impl-Debug-for-OrderKind"],[517,"impl-Display-for-OrderKind"],[518,"impl-Debug-for-ClauseItem%3C\'a%3E"],[519,"impl-Display-for-ClauseItem%3C\'a%3E"],[520,"impl-Debug-for-ClauseData%3C\'a%3E"],[521,"impl-Display-for-ClauseData%3C\'a%3E"],[522,"impl-Display-for-DirectiveKind"],[523,"impl-Debug-for-DirectiveKind"],[524,"impl-Debug-for-DirectiveIR%3C\'a%3E"],[525,"impl-Display-for-DirectiveIR%3C\'a%3E"],[527,"impl-Display-for-Expression%3C\'a%3E"],[528,"impl-Debug-for-Expression%3C\'a%3E"],[533,"impl-Display-for-SourceLocation"],[534,"impl-Debug-for-SourceLocation"],[535,"impl-Debug-for-Language"],[536,"impl-Display-for-Language"],[537,"impl-Display-for-Identifier%3C\'a%3E"],[538,"impl-Debug-for-Identifier%3C\'a%3E"],[539,"impl-Debug-for-ArraySection%3C\'a%3E"],[540,"impl-Display-for-ArraySection%3C\'a%3E"],[541,"impl-Debug-for-Variable%3C\'a%3E"],[542,"impl-Display-for-Variable%3C\'a%3E"],[559,"impl-From%3CExpression%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[560,"impl-From%3CIdentifier%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[562,"impl-From%3CVariable%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[578,"impl-From%3CIdentifier%3C\'a%3E%3E-for-Variable%3C\'a%3E"],[579,"impl-From%3C%26str%3E-for-Variable%3C\'a%3E"],[927,"impl-Debug-for-ConversionError"],[928,"impl-Display-for-ConversionError"],[958,"impl-Display-for-ValidationError"],[959,"impl-Debug-for-ValidationError"],[1073,"impl-Display-for-Clause%3C\'a%3E"],[1074,"impl-Debug-for-Clause%3C\'a%3E"],[1075,"impl-Debug-for-Directive%3C\'a%3E"],[1076,"impl-Display-for-Directive%3C\'a%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAI8DMQADAAEADAAHAC0ACwA7AAIARAAAAFEABgBjAAAAaAAAAHUAAACBAAAAgwAAAJIAAACVAAAApQAAAKgAAgCsAAAAsgAAALUAAgC5AAEAvAABAMUAAADvAAEA+gABACYBAQAyATkAbgFTAM4BGwDtASgAFwIBABoCAgAeAgAAMAIBADMCAABAAgAAQwIBAEcCEgDHAokAVgM9AJkDBACfAwIArAMEALcDCQDHAwcA0AMJAN4DBwDzA0IASgQYAWUFAQBpBQoA","P":[[11,"T"],[23,"U"],[27,""],[44,"U,T"],[48,"U"],[52,""],[305,"T"],[363,""],[393,"T"],[421,""],[452,"F"],[453,""],[489,"F"],[491,""],[545,"T"],[559,""],[561,"T"],[562,""],[563,"T"],[575,""],[576,"T"],[578,""],[580,"F"],[581,""],[582,"__H"],[601,""],[602,"U"],[631,""],[710,"T"],[738,""],[761,"U,T"],[790,"U"],[819,""],[920,"T"],[922,""],[923,"T"],[924,""],[929,"T"],[930,"U"],[931,""],[939,"T"],[940,""],[941,"U,T"],[942,"U"],[943,""],[950,"T"],[954,""],[955,"T"],[956,""],[960,"T"],[962,"U"],[964,""],[966,"T"],[967,""],[968,"U,T"],[970,"U"],[972,""],[989,"T"],[991,""],[992,"T"],[993,""],[997,"T"],[998,"U"],[999,""],[1010,"T"],[1011,"U,T"],[1012,"U"],[1013,""],[1033,"T"],[1053,""],[1060,"T"],[1062,""],[1077,"T"],[1087,"U"],[1097,""],[1116,"T"],[1118,""],[1122,"U,T"],[1132,"U"],[1142,""],[1362,"T"],[1366,""],[1369,"T"],[1371,""],[1378,"T"],[1380,"__H"],[1382,"U"],[1384,""],[1387,"T"],[1389,"U,T"],[1391,"U"],[1393,""]]}],["tester",{"t":"H","n":["main"],"q":[[0,"tester"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1186,39375,173]}