var searchIndex = new Map(JSON.parse('[["roup",{"t":"CCCCFFFFNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHNNNNNNNNNNNNPPPPPPPPPPPPPPFPPGPPPPPGPPPPPPPPPPGGPPPPPPEPPPPPPPPPPPGPPGPPPPGPFFGPPPPPPPPPGPPFGPPPPPPPPPPPPPPPFPPPPPPPPGPGPPGPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPFPPPPGPPPGPPPPPPPPPGGPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPEEFPPPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONONNNNNNNNNNNNNNNNONNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPPNNNNNHNNNNNHHHHHHHHNNNNNPPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOHHHHHHHHPPFGFFGPPFFFGPPPPFPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNCNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNHNNNNNNHNNNNNNNNNNNHNNNNNNNNN","n":["c_api","ir","lexer","parser","OmpClause","OmpClauseIterator","OmpDirective","OmpStringList","borrow","","","","borrow_mut","","","","from","","","","into","","","","roup_clause_default_data_sharing","roup_clause_free","roup_clause_iterator_free","roup_clause_iterator_next","roup_clause_kind","roup_clause_reduction_operator","roup_clause_schedule_kind","roup_clause_variables","roup_directive_clause_count","roup_directive_clauses_iter","roup_directive_free","roup_directive_kind","roup_parse","roup_string_list_free","roup_string_list_get","roup_string_list_len","try_from","","","","try_into","","","","type_id","","","","AcqRel","Acquire","Add","","AddressOf","Affinity","Aligned","Alloc","Allocate","","Allocator","And","Any","ArrayAccess","ArraySection","Atomic","AtomicDefaultMemOrder","AtomicOp","AtomicOperation","Auto","Bare","Barrier","BinaryOp","BinaryOperator","BitwiseAnd","","BitwiseNot","BitwiseOr","","BitwiseXor","","C","Call","Capture","ClauseData","ClauseItem","Close","Collapse","Complex","Concurrent","Conditional","","ConversionError","Copyin","Copyprivate","Cpp","Critical","Custom","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","DefaultKind","Delete","Depend","DependType","Depobj","","Deref","Device","DeviceType","","DirectiveBuilder","DirectiveIR","DirectiveKind","DistSchedule","Distribute","DistributeParallelFor","DistributeParallelForSimd","DistributeSimd","Div","Dynamic","Eq","Error","Expression","","","ExpressionAst","ExpressionKind","Filter","Firstprivate","","Flush","For","ForSimd","Fortran","From","Ge","Generic","Grainsize","Gt","Guided","HasDeviceAddr","Host","Identifier","","","If","In","Inout","IntLiteral","IsDevicePtr","ItemList","Language","Lastprivate","LastprivateModifier","Le","Linear","LinearModifier","LogicalAnd","LogicalNot","LogicalOr","Loop","Lt","Map","MapType","Masked","Master","","Max","MemoryOrder","Metadirective","Min","MinusEqual","Mod","Monotonic","Mul","Multiply","Mutexinoutset","Ne","Negate","Nohost","None","Nonmonotonic","Nothing","NumTasks","NumTeams","NumThreads","Or","Order","OrderKind","Ordered","","Out","Parallel","ParallelFor","ParallelForSimd","ParallelLoop","ParallelMasked","ParallelMaster","ParallelSections","ParallelWorkshare","Parenthesized","Parsed","ParserConfig","Primary","Priority","Private","","ProcBind","","Read","Reduction","ReductionOperator","Ref","Relaxed","Release","","Requires","Runtime","Safelen","Scan","Schedule","ScheduleKind","ScheduleModifier","Section","Sections","SeqCst","Shared","","ShiftLeft","ShiftRight","Simd","","Simdlen","Single","Sink","Source","SourceLocation","Spread","Static","Sub","Subtract","Target","TargetData","TargetEnterData","TargetExitData","TargetParallel","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetUpdate","Task","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeSimd","TeamsLoop","ThreadLimit","Threadprivate","To","ToFrom","UnaryOp","UnaryOperator","Unknown","","Unparsed","Update","UseDeviceAddr","UseDevicePtr","Uval","Val","ValidationContext","ValidationError","Variable","","Workshare","Write","all","array_sections","as_ast","as_str","","barrier","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","build","clauses","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","collapse","column","convert","count_clauses","default","","","","default_none","default_shared","depend","dimensions","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","filter_clauses","find_clause","firstprivate","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","for_loop","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","has_clause","has_structured_block","hash","","","","","","","","","","","","","","","","","","","if_clause","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_all","is_array","is_c_family","is_collapse","is_declare","is_default","is_depend","is_device","is_firstprivate","is_fortran","is_if","is_lastprivate","is_linear","is_loop","is_map","is_num_threads","is_ordered","is_parallel","is_parsed","is_private","is_proc_bind","is_reduction","is_scalar","is_schedule","is_shared","is_simd","is_single_index","is_synchronization","is_target","is_task","is_teams","is_worksharing","kind","","language","","length","line","location","lower_bound","map","name","","new","","","","","","","","nowait","num_threads","num_threads_expr","ordered","ordered_n","original_source","parallel","","parallel_for","parse_expressions","pragma_prefix","private","proc_bind","reduction","schedule","schedule_simple","schedule_with_modifiers","shared","simple","single_index","start","stride","string_only","target","task","taskwait","taskyield","teams","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_string","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unparsed","validate","","with_parsing","with_sections","alignment","allocator","","chunk_size","","condition","data","depend_type","device_num","directive_name","grain","items","","","","","","","","","","","","","","","","","kind","","length","","limit","map_type","mapper","memory_order","modifier","","modifiers","n","","name","num","","","op","operator","priority","step","thread_num","args","array","condition","else_expr","function","indices","left","op","","operand","right","then_expr","ConversionError","InvalidClauseSyntax","UnknownClause","UnknownDirective","Unsupported","borrow","borrow_mut","clone","clone_into","clone_to_uninit","convert_directive","eq","fmt","","from","into","parse_clause_data","parse_depend_type","parse_directive_kind","parse_identifier_list","parse_linear_clause","parse_map_clause","parse_reduction_operator","parse_schedule_clause","to_owned","to_string","try_from","try_into","type_id","ClauseNotAllowed","ConflictingClauses","InvalidCombination","MissingRequiredClause","ValidationContext","ValidationError","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","","is_clause_allowed","new","to_owned","to_string","try_from","","try_into","","type_id","","validate_all","clause1","clause2","clause_name","clauses","directive","","reason","","","required_clause","is_identifier_char","lex_clause","lex_directive","lex_identifier_token","lex_omp","lex_pragma","skip_space1_and_comments","skip_space_and_comments","Bare","","Clause","ClauseKind","ClauseRegistry","ClauseRegistryBuilder","ClauseRule","Custom","","Directive","DirectiveRegistry","DirectiveRegistryBuilder","DirectiveRule","Flexible","Generic","Parenthesized","","Parser","Unsupported","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","build","","builder","","clauses","clone","","clone_into","","clone_to_uninit","","default","","","","","eq","","","fmt","","","","","from","","","","","","","","","","into","","","","","","","","","","kind","name","","new","","","openmp","parse","","parse_omp_directive","parse_sequence","parse_with_name","register_bare","register_custom","","register_generic","register_parenthesized","register_with_rule","register_with_rule_mut","to_owned","","to_pragma_string","to_source_string","to_string","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","with_default_rule","","ALL","","AcqRel","Acquire","Affinity","Aligned","Allocate","Allocator","Assume","Atomic","AtomicCapture","AtomicCompareCapture","AtomicDefaultMemOrder","AtomicRead","AtomicUpdate","AtomicWrite","Barrier","BeginDeclareTarget","Bind","Cancel","CancellationPoint","Capture","Collapse","Compare","Copyin","Copyprivate","Critical","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","Defaultmap","Depend","Depobj","Destroy","Detach","Device","DeviceResident","DeviceType","Dispatch","DistSchedule","Distribute","DistributeParallelFor","DistributeParallelForSimd","DistributeParallelLoop","DistributeParallelLoopSimd","DistributeSimd","Doacross","DynamicAllocators","EndDeclareTarget","Error","Exclusive","Fail","Filter","Final","Firstprivate","Flush","For","ForSimd","From","Grainsize","Hint","Holds","If","InReduction","Inbranch","Inclusive","Init","Interop","","IsDevicePtr","Label","Lastprivate","Linear","Link","Loop","Map","Masked","MaskedTaskloop","MaskedTaskloopSimd","Master","Match","Mergeable","Message","Metadirective","NoOpenmp","NoOpenmpRoutines","NoParallelism","Nogroup","Nontemporal","Nothing","Notinbranch","Novariants","Nowait","NumTasks","NumTeams","NumThreads","OpenMpClause","OpenMpDirective","Order","Ordered","","Parallel","ParallelFor","ParallelForSimd","ParallelLoop","ParallelLoopSimd","ParallelMasked","ParallelMaskedTaskloop","ParallelMaskedTaskloopSimd","ParallelMaster","ParallelMasterTaskloop","ParallelMasterTaskloopSimd","ParallelSections","Partial","Priority","Private","ProcBind","Public","Reduction","Relaxed","Release","Reproducible","Requires","Reverse","Safelen","Schedule","Scope","Sections","SeqCst","Shared","Simd","Simdlen","Single","Sizes","Target","TargetData","TargetEnterData","TargetExitData","TargetLoop","TargetLoopSimd","TargetParallel","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetParallelLoopSimd","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeParallelLoop","TargetTeamsDistributeParallelLoopSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetTeamsLoopSimd","TargetUpdate","Task","TaskReduction","Taskgraph","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeParallelLoop","TeamsDistributeParallelLoopSimd","TeamsDistributeSimd","TeamsLoop","TeamsLoopSimd","ThreadLimit","Threadprivate","Tile","To","UnifiedAddress","UnifiedSharedMemory","Unroll","Untied","Update","UseDeviceAddr","UseDevicePtr","UsesAllocators","Weak","When","as_str","borrow","","borrow_mut","","clause_registry","clone","","clone_into","","clone_to_uninit","","directive_registry","eq","","fmt","","from","","hash","","into","","name","parser","rule","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"roup"],[4,"roup::c_api"],[52,"roup::ir"],[849,"roup::ir::ClauseData"],[899,"roup::ir::ExpressionKind"],[911,"roup::ir::convert"],[940,"roup::ir::validate"],[971,"roup::ir::validate::ValidationError"],[981,"roup::lexer"],[989,"roup::parser"],[1129,"roup::parser::openmp"],[1353,"std::os::raw"],[1354,"core::result"],[1355,"core::any"],[1356,"roup::ir::variable"],[1357,"alloc::vec"],[1358,"roup::ir::expression"],[1359,"core::option"],[1360,"roup::ir::types"],[1361,"roup::ir::directive"],[1362,"roup::ir::builder"],[1363,"roup::ir::clause"],[1364,"core::ops::function"],[1365,"core::fmt"],[1366,"core::hash"],[1367,"alloc::string"],[1368,"alloc::boxed"],[1369,"roup::parser::directive"],[1370,"roup::parser::clause"],[1371,"nom::internal"]],"i":"````````A`fln321032103210````````````````321032103210Db0CdEfEhC`0Cf1E`24DfEd`24`4Ch531`8768787Bj2Dd``D`84DlDj6`::48=88888:`9:`Cl9<;`;```;9999=6=9`Dn<``<Cn=;;;7<?==?8=:`19=229==`=`?=`Cd?0<Ef?`=7=1`=110Cj1251Eh>41?C`0030`0E`800000000?An`<272`2=2`DhDbCf14Ch656``552;6998565==`D`1:;66666666666666666666666666667622Ed`7Bj7Dd::77```Dn:1AhAj;;BfBlBnCd<;CjClCn=Db;DfDhDjDl>C`E`<EbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBn<CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBn5`<0;540001CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj;;BnCd0Cf0Ch0Cj0Cl0Cn0D`0Db0Dd0Df0Dh0Dj0Dl0Dn0C`0E`0Bl0EbAn0B`EdEfEhBh0Bj0Bf0Ah0Aj0Bn<0CdCfChCjClCnD`DbDdDfDhDjDlDn000C`E`BlEbAnB`EdEfEhBhBjBf0AhAj00;<CdCfChCjClCnD`DbDdDfDhDjDlE`EfEhBhBjBfBn0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj103=<====3===<===<9===0==<1<<<<<;8;:14;1Bn310<;:53210000090<0;40000000<252;00<<0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlAnBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnB`EdEfEhBhBjBfAhAj9`;:0G`GbGdGfGhGjGlGnH`3HbHdHfHhHjHlHnI`IbIdIf<IhIjG`GbIlInGfGhJ`JbJd??JfHh;6JhJjGlJlJnK`7HlKbIjKdKfKhKl021Kn0L`012`Lb00000000`00000````````00000Fn000``Lh101111111010100110101010Lj0LlLn1M`2310````````NdMn`````0N`````1021`1MhMfMlMjNb7Lf7Ld7654329180753640878787654329109110065432918076543291807110532`42`64553355587011065432918076543291807654329180753NjNh1111110000100000100111110000001110111110100000011001111100011111111110111110100001110111110111111``1100000000000001111111110111001101010000000000000000000000010000000000000001011111111111101010`101010`10101010101`110101010","f":"````````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{cc{}}000{{}c{}}000{fh}{fj}{lj}{{lf}h}333{fn}{A`h}{A`l}{A`j}2{AbA`}{nj}{{nh}Ab}{nh}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{bAf}000```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}Ah}{AjAl}{{{b{An}}}{{Bb{{b{B`}}}}}}{{{b{An}}}{{b{Bd}}}}{Bf{{b{Bd}}}}{{BhBj}Bl}{b{{b{c}}}{}}0000000000000000000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000000000000000000{{BnBhBj}Bl}{{{b{Bl}}}{{b{{Cb{C`}}}}}}{{{b{Cd}}}Cd}{{{b{Cf}}}Cf}{{{b{Ch}}}Ch}{{{b{Cj}}}Cj}{{{b{Cl}}}Cl}{{{b{Cn}}}Cn}{{{b{D`}}}D`}{{{b{Db}}}Db}{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{Dj}}}Dj}{{{b{Dl}}}Dl}{{{b{Dn}}}Dn}{{{b{C`}}}C`}{{{b{E`}}}E`}{{{b{Bl}}}Bl}{{{b{Eb}}}Eb}{{{b{An}}}An}{{{b{B`}}}B`}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bf}}}Bf}{{{b{Ah}}}Ah}{{{b{Aj}}}Aj}{{b{b{dc}}}j{}}000000000000000000000000000{{bEj}j}000000000000000000000000000{{Bn{b{Bd}}}Bn}{BhEl}`{{{b{Bl}}c}En{{Fd{{b{C`}}}{{F`{Fb}}}}}}{{BnCn}Bn}{{}Eb}{{}Bh}{{}Bj}{BnBn}0{{BnCl{b{{Cb{{b{Bd}}}}}}}Bn}{{{b{Aj}}}En}{{{b{Cd}}{b{Cd}}}Fb}{{{b{Cf}}{b{Cf}}}Fb}{{{b{Ch}}{b{Ch}}}Fb}{{{b{Cj}}{b{Cj}}}Fb}{{{b{Cl}}{b{Cl}}}Fb}{{{b{Cn}}{b{Cn}}}Fb}{{{b{D`}}{b{D`}}}Fb}{{{b{Db}}{b{Db}}}Fb}{{{b{Dd}}{b{Dd}}}Fb}{{{b{Df}}{b{Df}}}Fb}{{{b{Dh}}{b{Dh}}}Fb}{{{b{Dj}}{b{Dj}}}Fb}{{{b{Dl}}{b{Dl}}}Fb}{{{b{Dn}}{b{Dn}}}Fb}{{{b{C`}}{b{C`}}}Fb}{{{b{E`}}{b{E`}}}Fb}{{{b{Bl}}{b{Bl}}}Fb}{{{b{Eb}}{b{Eb}}}Fb}{{{b{An}}{b{An}}}Fb}{{{b{B`}}{b{B`}}}Fb}{{{b{Ed}}{b{Ed}}}Fb}{{{b{Ef}}{b{Ef}}}Fb}{{{b{Eh}}{b{Eh}}}Fb}{{{b{Bh}}{b{Bh}}}Fb}{{{b{Bj}}{b{Bj}}}Fb}{{{b{Bf}}{b{Bf}}}Fb}{{{b{Ah}}{b{Ah}}}Fb}{{{b{Aj}}{b{Aj}}}Fb}{{{b{Bl}}c}{{Al{{b{C`}}}}}{{Fd{{b{C`}}}{{F`{Fb}}}}}}{{{b{Bl}}c}{{Bb{{b{C`}}}}}{{Fd{{b{C`}}}{{F`{Fb}}}}}}{{Bn{b{{Cb{{b{Bd}}}}}}}Bn}{{{b{Cd}}{b{dFf}}}Fh}0{{{b{Cf}}{b{dFf}}}Fh}0{{{b{Ch}}{b{dFf}}}Fh}0{{{b{Cj}}{b{dFf}}}Fh}0{{{b{Cl}}{b{dFf}}}Fh}0{{{b{Cn}}{b{dFf}}}Fh}0{{{b{D`}}{b{dFf}}}Fh}0{{{b{Db}}{b{dFf}}}Fh}0{{{b{Dd}}{b{dFf}}}Fh}0{{{b{Df}}{b{dFf}}}Fh}0{{{b{Dh}}{b{dFf}}}Fh}0{{{b{Dj}}{b{dFf}}}Fh}0{{{b{Dl}}{b{dFf}}}Fh}0{{{b{Dn}}{b{dFf}}}Fh}0{{{b{C`}}{b{dFf}}}Fh}0{{{b{E`}}{b{dFf}}}Fh}0{{{b{Bl}}{b{dFf}}}Fh}0{{{b{Eb}}{b{dFf}}}Fh}{{{b{An}}{b{dFf}}}Fh}0{{{b{B`}}{b{dFf}}}Fh}{{{b{Ed}}{b{dFf}}}Fh}{{{b{Ef}}{b{dFf}}}Fh}{{{b{Eh}}{b{dFf}}}Fh}{{{b{Bh}}{b{dFf}}}Fh}0{{{b{Bj}}{b{dFf}}}Fh}0{{{b{Bf}}{b{dFf}}}Fh}0{{{b{Ah}}{b{dFf}}}Fh}0{{{b{Aj}}{b{dFf}}}Fh}0{{}Bn}{{Ch{Bb{An}}BhBj}Bl}{cc{}}0000000000000{AnDn}{AjDn}2{BfDn}333333333333{{{b{Bd}}}Bf}44{BfAj}{{{b{Bd}}}Aj}{{{b{Bl}}c}Fb{{Fd{{b{C`}}}{{F`{Fb}}}}}}{{{b{E`}}}Fb}{{{b{Cd}}{b{dc}}}jFj}{{{b{Cf}}{b{dc}}}jFj}{{{b{Ch}}{b{dc}}}jFj}{{{b{Cj}}{b{dc}}}jFj}{{{b{Cl}}{b{dc}}}jFj}{{{b{Cn}}{b{dc}}}jFj}{{{b{D`}}{b{dc}}}jFj}{{{b{Db}}{b{dc}}}jFj}{{{b{Dd}}{b{dc}}}jFj}{{{b{Df}}{b{dc}}}jFj}{{{b{Dh}}{b{dc}}}jFj}{{{b{Dj}}{b{dc}}}jFj}{{{b{Dl}}{b{dc}}}jFj}{{{b{E`}}{b{dc}}}jFj}{{{b{Ef}}{b{dc}}}jFj}{{{b{Eh}}{b{dc}}}jFj}{{{b{Bh}}{b{dc}}}jFj}{{{b{Bj}}{b{dc}}}jFj}{{{b{Bf}}{b{dc}}}jFj}{{Bn{b{Bd}}}Bn}{{}c{}}0000000000000000000000000000{{{b{Ah}}}Fb}{{{b{Aj}}}Fb}{BjFb}{{{b{C`}}}Fb}{{{b{E`}}}Fb}1111211101110{{{b{An}}}Fb}2224221511111{{{b{Bl}}}E`}{B`Ed}{{{b{Bl}}}Bj}{EbBj}{AhBb}{BhEl}{{{b{Bl}}}Bh}2{{BnCf{b{{Cb{{b{Bd}}}}}}}Bn}{Bf{{b{Bd}}}}{{{b{Aj}}}{{b{Bd}}}}{E`Bn}{{E`{Al{C`}}BhBj}Bl}{{FbBj}Eb}{{{b{Bd}}{b{Eb}}}An}{{ElEl}Bh}{{{b{Bd}}}Bf}{{{Bb{An}}{Bb{An}}{Bb{An}}}Ah}{{{b{Bd}}}Aj}{BnBn}{{Bnh}Bn}{{Bn{b{Bd}}}Bn}20{B`b}{{}Bn}{{{Bb{Cn}}BhBj}Bl}1{EbFb}{Bj{{b{Bd}}}}{{Bn{b{{Cb{{b{Bd}}}}}}}Bn}{{BnD`}Bn}{{BnCd{b{{Cb{{b{Bd}}}}}}}Bn}{{BnCh{Bb{{b{Bd}}}}}Bn}{{BnCh}Bn}{{BnCh{Al{Cj}}{Bb{{b{Bd}}}}}Bn}5{{E`BhBj}Bl}{AnAh}{{}Bh}{AhBb}{BjEb}>>{{BhBj}Bl}0?{bc{}}000000000000000000000000000{bFl}0000000000000000000000{c{{Ad{e}}}{}{}}0000000000000000000000000000{{}{{Ad{c}}}{}}0000000000000000000000000000{bAf}0000000000000000000000000000{{{b{Bd}}}An}`{{{b{Bl}}}{{Ad{j{Al{Fn}}}}}}8{{{b{Bd}}{Al{Ah}}}Aj}{G`Bb}{GbBb}{GdBf}{GfBb}{GhBb}{GjAn}{GlBb}{GnCl}{H`An}{GjBb}{HbAn}{HdAl}{HfAl}{HhAl}{HjAl}{HlAl}{HnAl}{I`Al}{IbAl}{IdAl}{IfAl}{GnAl}{IhAl}{IjAl}{G`Al}{GbAl}{IlAl}{InAl}{GfCh}{GhCh}{J`An}{JbAn}{JdAn}{HnBb}0{JfBb}{HhBb}{IjBb}{GfAl}{JhAn}{JjBb}{GlBf}{JlAn}{JnAn}{K`An}{JfDd}{HlCd}{KbAn}:{KdAn}{KfAl}{KhKj}{KlKj}0{Kfb}{KhAl}{KnKj}{KnEf}{L`Eh}{L`Kj}36`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Lb}}}Lb}{{b{b{dc}}}j{}}{{bEj}j}{{{b{Ld}}BhBj{b{Eb}}}{{Ad{BlLb}}}}{{{b{Lb}}{b{Lb}}}Fb}{{{b{Lb}}{b{dFf}}}Fh}0{cc{}}{{}c{}}{{{b{Lf}}{b{Eb}}}{{Ad{C`Lb}}}}{{{b{Bd}}}{{Ad{ClLb}}}}{{{b{Bd}}}{{Ad{E`Lb}}}}{{{b{Bd}}}{{Al{Dn}}}}{{{b{Bd}}}{{Ad{C`Lb}}}}0{{{b{Bd}}}{{Ad{CdLb}}}}1{bc{}}{bFl}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}``````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Fn}}}Fn}{{b{b{dc}}}j{}}{{bEj}j}{{{b{Fn}}{b{Fn}}}Fb}{{{b{Fn}}{b{dFf}}}Fh}0{cc{}}0{{}c{}}0{{{b{Lh}}{b{C`}}}{{Ad{jFn}}}}{E`Lh}?>==<<;;{{{b{Lh}}{b{{Cb{C`}}}}}{{Ad{j{Al{Fn}}}}}}{LjFl}0{LlFl}{LnAl}1{M`Fl}23{LnFl}1{MbFb}{{{b{Bd}}}{{Md{{b{Bd}}{b{Bd}}}}}}000000```````````````````{b{{b{c}}}{}}000000000{{{b{d}}}{{b{dc}}}{}}000000000{MfMh}{MjMl}{{}Mf}{{}Mj}{LdAl}{{{b{Mn}}}Mn}{{{b{N`}}}N`}{{b{b{dc}}}j{}}0{{bEj}j}0{{}Mh}7{{}Ml}7{{}Nb}{{{b{Nd}}{b{Nd}}}Fb}{{{b{Lf}}{b{Lf}}}Fb}{{{b{Ld}}{b{Ld}}}Fb}{{{b{Nd}}{b{dFf}}}Fh}{{{b{Lf}}{b{dFf}}}Fh}0{{{b{Ld}}{b{dFf}}}Fh}0{cc{}}000000000{{}c{}}000000000{LfNd}{Lfb}{Ldb}{{}Mf}{{}Mj}{{MlMh}Nb}`{{{b{Ml}}{b{Bd}}{b{Mh}}}{{Md{{b{Bd}}Ld}}}}{{{b{Nb}}{b{Bd}}}{{Md{{b{Bd}}Ld}}}}{{{b{Bd}}}{{Md{{b{Bd}}Ld}}}}{{{b{Mh}}{b{Bd}}}{{Md{{b{Bd}}{Al{Lf}}}}}}{{{b{Ml}}{b{Bd}}{b{Bd}}{b{Mh}}}{{Md{{b{Bd}}Ld}}}}{{Mf{b{Bd}}}Mf}{{Mf{b{Bd}}{Nf{{b{Bd}}{b{Bd}}}{{F`{{Md{{b{Bd}}Lf}}}}}}}Mf}{{Mj{b{Bd}}{Nf{{b{Bd}}{b{Bd}}{b{Mh}}}{{F`{{Md{{b{Bd}}Ld}}}}}}}Mj}{{Mj{b{Bd}}}Mj}3{{Mf{b{Bd}}Mn}Mf}{{{b{dMf}}{b{Bd}}Mn}{{b{dMf}}}}{bc{}}0{{{b{Ld}}}Fl}{{{b{Lf}}}Fl}{bFl}0{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{bAf}000000000{{MfMn}Mf}{{MjN`}Mj}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{Nh{{b{Bd}}}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{}Mh}{{{b{Nj}}}Nj}{{{b{Nh}}}Nh}{{b{b{dc}}}j{}}0{{bEj}j}0{{}Ml}{{{b{Nj}}{b{Nj}}}Fb}{{{b{Nh}}{b{Nh}}}Fb}{{{b{Nj}}{b{dFf}}}Fh}{{{b{Nh}}{b{dFf}}}Fh}{cc{}}0{{{b{Nj}}{b{dc}}}jFj}{{{b{Nh}}{b{dc}}}jFj}{{}c{}}0{Nj{{b{Bd}}}}{{}Nb}{NjMn}{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0","D":"CJn","p":[[1,"reference",null,null,1],[0,"mut"],[5,"OmpClause",4],[1,"i32"],[1,"unit"],[5,"OmpClauseIterator",4],[5,"OmpStringList",4],[5,"OmpDirective",4],[8,"c_char",1353],[6,"Result",1354,null,1],[5,"TypeId",1355],[5,"ArraySection",52,1356],[5,"Variable",52,1356],[5,"Vec",1357],[6,"Expression",52,1358],[5,"ExpressionAst",52,1358],[6,"Option",1359,null,1],[1,"str"],[5,"Identifier",52,1356],[5,"SourceLocation",52,1360],[6,"Language",52,1360],[5,"DirectiveIR",52,1361],[5,"DirectiveBuilder",52,1362],[6,"ClauseData",52,1363],[1,"slice"],[6,"ReductionOperator",52,1363],[6,"MapType",52,1363],[6,"ScheduleKind",52,1363],[6,"ScheduleModifier",52,1363],[6,"DependType",52,1363],[6,"DefaultKind",52,1363],[6,"ProcBind",52,1363],[6,"MemoryOrder",52,1363],[6,"AtomicOp",52,1363],[6,"DeviceType",52,1363],[6,"LinearModifier",52,1363],[6,"LastprivateModifier",52,1363],[6,"OrderKind",52,1363],[6,"ClauseItem",52,1363],[6,"DirectiveKind",52,1361],[5,"ParserConfig",52,1358],[6,"ExpressionKind",52,1358],[6,"BinaryOperator",52,1358],[6,"UnaryOperator",52,1358],[1,"u8"],[1,"u32"],[1,"usize"],[17,"Output"],[1,"bool"],[10,"Fn",1364],[5,"Formatter",1365],[8,"Result",1365],[10,"Hasher",1366],[5,"String",1367],[6,"ValidationError",940],[15,"Aligned",849],[15,"Allocate",849],[15,"Allocator",849],[15,"Schedule",849],[15,"DistSchedule",849],[15,"If",849],[15,"Generic",849],[15,"Depend",849],[15,"Device",849],[15,"Grainsize",849],[15,"Private",849],[15,"Firstprivate",849],[15,"Lastprivate",849],[15,"Shared",849],[15,"Reduction",849],[15,"Map",849],[15,"UseDevicePtr",849],[15,"UseDeviceAddr",849],[15,"IsDevicePtr",849],[15,"HasDeviceAddr",849],[15,"Affinity",849],[15,"Linear",849],[15,"Copyin",849],[15,"Copyprivate",849],[15,"Safelen",849],[15,"Simdlen",849],[15,"ThreadLimit",849],[15,"AtomicOperation",849],[15,"Collapse",849],[15,"Ordered",849],[15,"NumThreads",849],[15,"NumTeams",849],[15,"NumTasks",849],[15,"Priority",849],[15,"Filter",849],[15,"Call",899],[15,"ArrayAccess",899],[5,"Box",1368,null,1],[15,"Conditional",899],[15,"BinaryOp",899],[15,"UnaryOp",899],[6,"ConversionError",911],[5,"Directive",989,1369],[5,"Clause",989,1370],[5,"ValidationContext",940],[15,"ConflictingClauses",971],[15,"ClauseNotAllowed",971],[15,"InvalidCombination",971],[15,"MissingRequiredClause",971],[1,"char"],[8,"IResult",1371],[5,"ClauseRegistryBuilder",989,1370],[5,"ClauseRegistry",989,1370],[5,"DirectiveRegistryBuilder",989,1369],[5,"DirectiveRegistry",989,1369],[6,"ClauseRule",989,1370],[6,"DirectiveRule",989,1369],[5,"Parser",989],[6,"ClauseKind",989,1370],[1,"fn"],[6,"OpenMpDirective",1129],[6,"OpenMpClause",1129]],"r":[[52,1363],[53,1363],[54,1363],[55,1358],[56,1358],[57,1363],[58,1363],[59,1363],[60,1363],[61,1361],[62,1363],[63,1358],[64,1363],[65,1358],[66,1356],[67,1361],[68,1363],[69,1363],[70,1363],[71,1363],[72,1363],[73,1361],[74,1358],[75,1358],[76,1363],[77,1358],[78,1358],[79,1363],[80,1358],[81,1363],[82,1358],[83,1360],[84,1358],[85,1363],[86,1363],[87,1363],[88,1363],[89,1363],[90,1358],[91,1363],[92,1363],[93,1358],[94,911],[95,1363],[96,1363],[97,1360],[98,1361],[99,1363],[100,1361],[101,1361],[102,1361],[103,1361],[104,1361],[105,1363],[106,1363],[107,1363],[108,1363],[109,1363],[110,1363],[111,1361],[112,1358],[113,1363],[114,1363],[115,1363],[116,1362],[117,1361],[118,1361],[119,1363],[120,1361],[121,1361],[122,1361],[123,1361],[124,1358],[125,1363],[126,1358],[127,1361],[128,1358],[129,1363],[130,1363],[131,1358],[132,1358],[133,1363],[134,1363],[135,1363],[136,1361],[137,1361],[138,1361],[139,1360],[140,1363],[141,1358],[142,1363],[143,1363],[144,1358],[145,1363],[146,1363],[147,1363],[148,1356],[149,1363],[150,1358],[151,1363],[152,1363],[153,1363],[154,1358],[155,1363],[156,1363],[157,1360],[158,1363],[159,1363],[160,1358],[161,1363],[162,1363],[163,1363],[164,1358],[165,1363],[166,1361],[167,1358],[168,1363],[169,1363],[170,1361],[171,1363],[172,1361],[173,1363],[174,1363],[175,1361],[176,1363],[177,1363],[178,1358],[179,1363],[180,1358],[181,1363],[182,1363],[183,1358],[184,1358],[185,1363],[186,1363],[187,1363],[188,1361],[189,1363],[190,1363],[191,1363],[192,1358],[193,1363],[194,1363],[195,1363],[196,1361],[197,1363],[198,1361],[199,1361],[200,1361],[201,1361],[202,1361],[203,1361],[204,1361],[205,1361],[206,1358],[207,1358],[208,1358],[209,1363],[210,1363],[211,1363],[212,1363],[213,1363],[214,1363],[215,1363],[216,1363],[217,1363],[218,1363],[219,1363],[220,1363],[221,1363],[222,1361],[223,1363],[224,1363],[225,1361],[226,1363],[227,1363],[228,1363],[229,1361],[230,1361],[231,1363],[232,1363],[233,1363],[234,1358],[235,1358],[236,1363],[237,1361],[238,1363],[239,1361],[240,1363],[241,1363],[242,1360],[243,1363],[244,1363],[245,1358],[246,1363],[247,1361],[248,1361],[249,1361],[250,1361],[251,1361],[252,1361],[253,1361],[254,1361],[255,1361],[256,1361],[257,1361],[258,1361],[259,1361],[260,1361],[261,1361],[262,1361],[263,1361],[264,1361],[265,1361],[266,1361],[267,1361],[268,1361],[269,1361],[270,1361],[271,1361],[272,1361],[273,1361],[274,1361],[275,1363],[276,1361],[277,1363],[278,1363],[279,1358],[280,1358],[281,1361],[282,1360],[283,1358],[284,1363],[285,1363],[286,1363],[287,1363],[288,1363],[289,940],[290,940],[291,1356],[292,1363],[293,1361],[294,1363],[295,1356],[296,1356],[297,1358],[298,1358],[299,1356],[300,1361],[301,1362],[302,1363],[303,1363],[304,1363],[305,1363],[306,1363],[307,1363],[308,1363],[309,1363],[310,1363],[311,1363],[312,1363],[313,1363],[314,1363],[315,1363],[316,1363],[317,1361],[318,1361],[319,1358],[320,1358],[321,1358],[322,1358],[323,1358],[324,1358],[325,1360],[326,1360],[327,1356],[328,1356],[329,1356],[330,1362],[331,1363],[332,1363],[333,1363],[334,1363],[335,1363],[336,1363],[337,1363],[338,1363],[339,1363],[340,1363],[341,1363],[342,1363],[343,1363],[344,1363],[345,1363],[346,1361],[347,1361],[348,1358],[349,1358],[350,1358],[351,1358],[352,1358],[353,1358],[354,1360],[355,1360],[356,1356],[357,1356],[358,1356],[359,1362],[360,1361],[361,1363],[362,1363],[363,1363],[364,1363],[365,1363],[366,1363],[367,1363],[368,1363],[369,1363],[370,1363],[371,1363],[372,1363],[373,1363],[374,1363],[375,1363],[376,1361],[377,1361],[378,1358],[379,1358],[380,1358],[381,1358],[382,1358],[383,1358],[384,1360],[385,1360],[386,1356],[387,1356],[388,1356],[389,1363],[390,1363],[391,1363],[392,1363],[393,1363],[394,1363],[395,1363],[396,1363],[397,1363],[398,1363],[399,1363],[400,1363],[401,1363],[402,1363],[403,1363],[404,1361],[405,1361],[406,1358],[407,1358],[408,1358],[409,1358],[410,1358],[411,1358],[412,1360],[413,1360],[414,1356],[415,1356],[416,1356],[417,1363],[418,1363],[419,1363],[420,1363],[421,1363],[422,1363],[423,1363],[424,1363],[425,1363],[426,1363],[427,1363],[428,1363],[429,1363],[430,1363],[431,1363],[432,1361],[433,1361],[434,1358],[435,1358],[436,1358],[437,1358],[438,1358],[439,1358],[440,1360],[441,1360],[442,1356],[443,1356],[444,1356],[445,1362],[446,1360],[448,1361],[449,1362],[450,1358],[451,1360],[452,1360],[453,1362],[454,1362],[455,1362],[456,1356],[457,1363],[458,1363],[459,1363],[460,1363],[461,1363],[462,1363],[463,1363],[464,1363],[465,1363],[466,1363],[467,1363],[468,1363],[469,1363],[470,1363],[471,1363],[472,1361],[473,1361],[474,1358],[475,1358],[476,1358],[477,1358],[478,1358],[479,1358],[480,1360],[481,1360],[482,1356],[483,1356],[484,1356],[485,1361],[486,1361],[487,1362],[488,1363],[489,1363],[490,1363],[491,1363],[492,1363],[493,1363],[494,1363],[495,1363],[496,1363],[497,1363],[498,1363],[499,1363],[500,1363],[501,1363],[502,1363],[503,1363],[504,1363],[505,1363],[506,1363],[507,1363],[508,1363],[509,1363],[510,1363],[511,1363],[512,1363],[513,1363],[514,1363],[515,1363],[516,1363],[517,1363],[518,1361],[519,1361],[520,1361],[521,1361],[522,1358],[523,1358],[524,1358],[525,1358],[526,1358],[527,1358],[528,1358],[529,1360],[530,1360],[531,1360],[532,1360],[533,1356],[534,1356],[535,1356],[536,1356],[537,1356],[538,1356],[539,1362],[540,1361],[541,1362],[542,1363],[543,1363],[544,1363],[545,1363],[546,1363],[547,1363],[548,1363],[549,1363],[550,1363],[551,1363],[552,1363],[553,1363],[554,1363],[555,1363],[556,1363],[557,1363],[558,1363],[559,1363],[560,1361],[561,1361],[562,1358],[563,1358],[564,1358],[565,1358],[566,1358],[567,1358],[568,1360],[569,1360],[570,1356],[571,1356],[572,1356],[573,1356],[574,1356],[575,1356],[576,1361],[577,1361],[578,1363],[579,1363],[580,1363],[581,1363],[582,1363],[583,1363],[584,1363],[585,1363],[586,1363],[587,1363],[588,1363],[589,1363],[590,1363],[591,1361],[592,1358],[593,1358],[594,1360],[595,1360],[596,1356],[597,1362],[598,1362],[599,1363],[600,1363],[601,1363],[602,1363],[603,1363],[604,1363],[605,1363],[606,1363],[607,1363],[608,1363],[609,1363],[610,1363],[611,1363],[612,1363],[613,1363],[614,1361],[615,1361],[616,1358],[617,1358],[618,1358],[619,1358],[620,1358],[621,1358],[622,1360],[623,1360],[624,1356],[625,1356],[626,1356],[627,1356],[628,1356],[629,1360],[630,1363],[631,1361],[632,1363],[633,1363],[634,1363],[635,1363],[636,1360],[637,1363],[638,1363],[639,1363],[640,1361],[641,1363],[642,1363],[643,1363],[644,1361],[645,1358],[646,1363],[647,1363],[648,1363],[649,1356],[650,1363],[651,1363],[652,1361],[653,1356],[654,1361],[655,1361],[656,1361],[657,1361],[658,1361],[659,1361],[660,1358],[661,1361],[662,1358],[663,1356],[664,1360],[665,1361],[666,1356],[667,1362],[668,1356],[669,1356],[670,1362],[671,1361],[672,1358],[673,1358],[674,1360],[675,1356],[676,1356],[677,1356],[678,1362],[679,1362],[680,1362],[681,1362],[682,1362],[683,1358],[684,1362],[685,1361],[686,1362],[687,1358],[688,1360],[689,1362],[690,1362],[691,1362],[692,1362],[693,1362],[694,1362],[695,1362],[696,1361],[697,1356],[698,1360],[699,1356],[700,1358],[701,1362],[702,1362],[703,1361],[704,1361],[705,1362],[706,1363],[707,1363],[708,1363],[709,1363],[710,1363],[711,1363],[712,1363],[713,1363],[714,1363],[715,1363],[716,1363],[717,1363],[718,1363],[719,1363],[720,1363],[721,1361],[722,1361],[723,1358],[724,1358],[725,1358],[726,1358],[727,1358],[728,1358],[729,1360],[730,1360],[731,1356],[732,1356],[733,1356],[734,1363],[735,1363],[736,1363],[737,1363],[738,1363],[739,1363],[740,1363],[741,1363],[742,1363],[743,1363],[744,1363],[745,1363],[746,1363],[747,1363],[748,1363],[749,1361],[750,1361],[751,1358],[752,1360],[753,1360],[754,1356],[755,1356],[756,1356],[757,1362],[758,1363],[759,1363],[760,1363],[761,1363],[762,1363],[763,1363],[764,1363],[765,1363],[766,1363],[767,1363],[768,1363],[769,1363],[770,1363],[771,1363],[772,1363],[773,1361],[774,1361],[775,1358],[776,1358],[777,1358],[778,1358],[779,1358],[780,1358],[781,1360],[782,1360],[783,1356],[784,1356],[785,1356],[786,1362],[787,1363],[788,1363],[789,1363],[790,1363],[791,1363],[792,1363],[793,1363],[794,1363],[795,1363],[796,1363],[797,1363],[798,1363],[799,1363],[800,1363],[801,1363],[802,1361],[803,1361],[804,1358],[805,1358],[806,1358],[807,1358],[808,1358],[809,1358],[810,1360],[811,1360],[812,1356],[813,1356],[814,1356],[815,1362],[816,1363],[817,1363],[818,1363],[819,1363],[820,1363],[821,1363],[822,1363],[823,1363],[824,1363],[825,1363],[826,1363],[827,1363],[828,1363],[829,1363],[830,1363],[831,1361],[832,1361],[833,1358],[834,1358],[835,1358],[836,1358],[837,1358],[838,1358],[839,1360],[840,1360],[841,1356],[842,1356],[843,1356],[844,1358],[846,1361],[847,1358],[848,1356],[989,1370],[990,1370],[991,1370],[992,1370],[993,1370],[994,1370],[995,1370],[996,1370],[997,1369],[998,1369],[999,1369],[1000,1369],[1001,1369],[1002,1370],[1003,1369],[1004,1370],[1005,1370],[1007,1370],[1008,1370],[1009,1370],[1010,1369],[1011,1369],[1013,1370],[1014,1370],[1015,1370],[1016,1369],[1017,1369],[1018,1370],[1019,1370],[1020,1369],[1021,1369],[1023,1370],[1024,1370],[1025,1370],[1026,1369],[1027,1369],[1028,1370],[1029,1369],[1030,1370],[1031,1369],[1032,1369],[1033,1370],[1034,1369],[1035,1370],[1036,1369],[1037,1370],[1038,1369],[1039,1370],[1040,1370],[1041,1369],[1042,1369],[1044,1370],[1045,1370],[1046,1369],[1047,1370],[1048,1370],[1049,1370],[1050,1369],[1051,1369],[1052,1370],[1053,1370],[1054,1369],[1055,1369],[1057,1370],[1058,1370],[1059,1370],[1060,1369],[1061,1369],[1062,1370],[1063,1370],[1064,1369],[1065,1369],[1067,1370],[1068,1370],[1069,1370],[1070,1369],[1071,1369],[1072,1370],[1073,1370],[1074,1369],[1075,1370],[1076,1369],[1079,1369],[1082,1370],[1083,1369],[1084,1370],[1085,1370],[1086,1369],[1087,1369],[1088,1370],[1089,1370],[1090,1370],[1091,1370],[1092,1369],[1093,1369],[1094,1370],[1095,1370],[1096,1369],[1097,1370],[1098,1370],[1099,1369],[1100,1369],[1102,1370],[1103,1370],[1104,1370],[1105,1369],[1106,1369],[1107,1370],[1108,1370],[1109,1369],[1110,1369],[1112,1370],[1113,1370],[1114,1370],[1115,1369],[1116,1369],[1117,1370],[1118,1370],[1119,1369],[1120,1369],[1122,1370],[1123,1370],[1124,1370],[1125,1369],[1126,1369],[1127,1370],[1128,1369]],"b":[[488,"impl-Display-for-ReductionOperator"],[489,"impl-Debug-for-ReductionOperator"],[490,"impl-Debug-for-MapType"],[491,"impl-Display-for-MapType"],[492,"impl-Display-for-ScheduleKind"],[493,"impl-Debug-for-ScheduleKind"],[494,"impl-Debug-for-ScheduleModifier"],[495,"impl-Display-for-ScheduleModifier"],[496,"impl-Debug-for-DependType"],[497,"impl-Display-for-DependType"],[498,"impl-Display-for-DefaultKind"],[499,"impl-Debug-for-DefaultKind"],[500,"impl-Display-for-ProcBind"],[501,"impl-Debug-for-ProcBind"],[502,"impl-Display-for-MemoryOrder"],[503,"impl-Debug-for-MemoryOrder"],[504,"impl-Debug-for-AtomicOp"],[505,"impl-Display-for-AtomicOp"],[506,"impl-Debug-for-DeviceType"],[507,"impl-Display-for-DeviceType"],[508,"impl-Debug-for-LinearModifier"],[509,"impl-Display-for-LinearModifier"],[510,"impl-Debug-for-LastprivateModifier"],[511,"impl-Display-for-LastprivateModifier"],[512,"impl-Debug-for-OrderKind"],[513,"impl-Display-for-OrderKind"],[514,"impl-Debug-for-ClauseItem%3C\'a%3E"],[515,"impl-Display-for-ClauseItem%3C\'a%3E"],[516,"impl-Display-for-ClauseData%3C\'a%3E"],[517,"impl-Debug-for-ClauseData%3C\'a%3E"],[518,"impl-Display-for-DirectiveKind"],[519,"impl-Debug-for-DirectiveKind"],[520,"impl-Debug-for-DirectiveIR%3C\'a%3E"],[521,"impl-Display-for-DirectiveIR%3C\'a%3E"],[523,"impl-Display-for-Expression%3C\'a%3E"],[524,"impl-Debug-for-Expression%3C\'a%3E"],[529,"impl-Debug-for-SourceLocation"],[530,"impl-Display-for-SourceLocation"],[531,"impl-Debug-for-Language"],[532,"impl-Display-for-Language"],[533,"impl-Display-for-Identifier%3C\'a%3E"],[534,"impl-Debug-for-Identifier%3C\'a%3E"],[535,"impl-Display-for-ArraySection%3C\'a%3E"],[536,"impl-Debug-for-ArraySection%3C\'a%3E"],[537,"impl-Display-for-Variable%3C\'a%3E"],[538,"impl-Debug-for-Variable%3C\'a%3E"],[555,"impl-From%3CExpression%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[556,"impl-From%3CVariable%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[558,"impl-From%3CIdentifier%3C\'a%3E%3E-for-ClauseItem%3C\'a%3E"],[574,"impl-From%3CIdentifier%3C\'a%3E%3E-for-Variable%3C\'a%3E"],[575,"impl-From%3C%26str%3E-for-Variable%3C\'a%3E"],[923,"impl-Debug-for-ConversionError"],[924,"impl-Display-for-ConversionError"],[954,"impl-Display-for-ValidationError"],[955,"impl-Debug-for-ValidationError"],[1048,"impl-Display-for-Clause%3C\'a%3E"],[1049,"impl-Debug-for-Clause%3C\'a%3E"],[1050,"impl-Display-for-Directive%3C\'a%3E"],[1051,"impl-Debug-for-Directive%3C\'a%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHIDMQADAAEACQAHACkACwA3AAIAQAAAAE0ABgBfAAAAZAAAAHEAAAB9AAAAfwAAAI4AAACRAAAAoQAAAKQAAgCoAAAArgAAALEAAgC1AAEAuAABAMEAAADrAAEA9gABACIBAQAuATkAagFTAMoBGwDpASkAFAIAABYCAQAZAgAAGwIAACwCAQAvAgAAPAIAAD8CAQBDAhIAwwKJAFIDPQCVAwQAmwMCAKgDBACzAwkAwwMHAMwDCQDeAz4AMQQHATsFAQA/BQoA","P":[[8,"T"],[20,"U"],[24,""],[40,"U,T"],[44,"U"],[48,""],[301,"T"],[359,""],[389,"T"],[417,""],[448,"F"],[449,""],[485,"F"],[487,""],[541,"T"],[555,""],[557,"T"],[558,""],[559,"T"],[571,""],[572,"T"],[574,""],[576,"F"],[577,""],[578,"__H"],[597,""],[598,"U"],[627,""],[706,"T"],[734,""],[757,"U,T"],[786,"U"],[815,""],[916,"T"],[918,""],[919,"T"],[920,""],[925,"T"],[926,"U"],[927,""],[935,"T"],[936,""],[937,"U,T"],[938,"U"],[939,""],[946,"T"],[950,""],[951,"T"],[952,""],[956,"T"],[958,"U"],[960,""],[962,"T"],[963,""],[964,"U,T"],[966,"U"],[968,""],[1008,"T"],[1028,""],[1035,"T"],[1037,""],[1052,"T"],[1062,"U"],[1072,""],[1091,"T"],[1093,""],[1097,"U,T"],[1107,"U"],[1117,""],[1320,"T"],[1324,""],[1327,"T"],[1329,""],[1336,"T"],[1338,"__H"],[1340,"U"],[1342,""],[1345,"T"],[1347,"U,T"],[1349,"U"],[1351,""]]}],["tester",{"t":"H","n":["main"],"q":[[0,"tester"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[38134,173]}