var searchIndex = new Map(JSON.parse('[["gen",{"t":"CHSSSHHHHHHHHH","n":["constants_gen","main","FNV_OFFSET_BASIS","FNV_PRIME","UNKNOWN_KIND","calculate_checksum","extract_checksum_from_header","find_matches_in_expr","find_matches_in_stmts","normalize_constant_name","parse_clause_arm","parse_clause_mappings","parse_directive_arm","parse_directive_mappings"],"q":[[0,"gen"],[2,"gen::constants_gen"],[14,"alloc::string"],[15,"core::option"],[16,"syn::expr"],[17,"core::ops::function"],[18,"syn::stmt"],[19,"alloc::vec"]],"i":"``````````````","f":"`{{}b}{{}d}0{{}f}{{{n{{l{{j{hf}}}}}}{n{{l{{j{hf}}}}}}}d}{{{n{A`}}}{{Ab{d}}}}{{{n{Ad}}{n{Afc}}}b{{Aj{{n{{l{Ah}}}}}}}}{{{n{{l{Al}}}}{n{Afc}}}b{{Aj{{n{{l{Ah}}}}}}}}{{{n{A`}}}h}{{{n{Ah}}}{{Ab{{j{hf}}}}}}{{}{{An{{j{hf}}}}}}10","D":"Aj","p":[[1,"unit"],[1,"u64"],[1,"i32"],[5,"String",14],[1,"tuple",null,null,1],[1,"slice"],[1,"reference",null,null,1],[1,"str"],[6,"Option",15,null,1],[6,"Expr",16],[0,"mut"],[5,"Arm",16],[10,"FnMut",17],[6,"Stmt",18],[5,"Vec",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAIABAA=","P":[[7,"F"],[9,""]]}],["roup",{"t":"CCCCFFFFSSSNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNPPPPPPPPPPPPPPPFPPPPPPGPPPPPPPPPPPPGPPPPPPPPPPPPGGPPPPPPGPPPPPPPPPPPPGPPGPPPPGPFFGPPPPPPPPPPPPPPPPPPGPPFGPPPPPPPPPPPPPPPPPFPPPPPPPPPPPGPGPPGPPPPPPGPPPPPPGPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPFPPPPGPPPGPPPPPPPPPPGGPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPEEFPPPPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONONNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHPPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOPPPGNNNNNNNNNNHHHHHHHHHHHNNNNPPFGFFGPPFFFGPPPPFPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNCNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNHNNNNNNHNNNNNNNNNNNHNNNNNNNNN","n":["c_api","ir","lexer","parser","OmpClause","OmpClauseIterator","OmpDirective","OmpStringList","ROUP_LANG_C","ROUP_LANG_FORTRAN_FIXED","ROUP_LANG_FORTRAN_FREE","borrow","","","","borrow_mut","","","","from","","","","into","","","","roup_clause_default_data_sharing","roup_clause_free","roup_clause_iterator_free","roup_clause_iterator_next","roup_clause_kind","roup_clause_reduction_operator","roup_clause_schedule_kind","roup_clause_variables","roup_directive_clause_count","roup_directive_clauses_iter","roup_directive_free","roup_directive_kind","roup_directive_name","roup_parse","roup_parse_with_language","roup_string_list_free","roup_string_list_get","roup_string_list_len","try_from","","","","try_into","","","","type_id","","","","AcqRel","Acquire","Add","","AddressOf","Affinity","Aligned","Alloc","Allocate","","Allocator","Allocators","And","Any","ArrayAccess","ArraySection","Assume","Assumes","Atomic","AtomicCapture","AtomicCompareCapture","AtomicDefaultMemOrder","AtomicOp","AtomicOperation","AtomicRead","AtomicUpdate","AtomicWrite","Auto","Bare","Barrier","BeginAssumes","BeginDeclareTarget","BeginDeclareVariant","BeginMetadirective","BinaryOp","BinaryOperator","BitwiseAnd","","BitwiseNot","BitwiseOr","","BitwiseXor","","C","Call","Cancel","CancellationPoint","Capture","ClauseData","ClauseItem","Close","Collapse","Complex","Concurrent","Conditional","","ConversionError","Copyin","Copyprivate","Cpp","Critical","Custom","DeclareInduction","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","DefaultKind","Delete","Depend","DependType","Depobj","","Deref","Device","DeviceType","","DirectiveBuilder","DirectiveIR","DirectiveKind","Dispatch","DistSchedule","Distribute","DistributeParallelDo","DistributeParallelDoSimd","DistributeParallelFor","DistributeParallelForSimd","DistributeParallelLoop","DistributeParallelLoopSimd","DistributeSimd","Div","Do","DoSimd","Dynamic","EndDeclareTarget","EndDeclareVariant","Eq","Error","Expression","","","ExpressionAst","ExpressionKind","Filter","Firstprivate","","Flush","For","ForSimd","Fortran","From","Fuse","Ge","Generic","Grainsize","Groupprivate","Gt","Guided","HasDeviceAddr","Host","Identifier","","","If","In","Inout","IntLiteral","Interchange","Interop","InvalidClauseSyntax","IsDevicePtr","ItemList","Language","Lastprivate","LastprivateModifier","Le","Linear","LinearModifier","LogicalAnd","LogicalNot","LogicalOr","Loop","Lt","Map","MapType","Masked","MaskedTaskloop","MaskedTaskloopSimd","Master","","Max","MemoryOrder","Metadirective","Min","MinusEqual","Mod","Monotonic","Mul","Multiply","Mutexinoutset","Ne","Negate","Nohost","None","Nonmonotonic","Nothing","NumTasks","NumTeams","NumThreads","Or","Order","OrderKind","Ordered","","Out","Parallel","ParallelDo","ParallelDoSimd","ParallelFor","ParallelForSimd","ParallelLoop","ParallelLoopSimd","ParallelMasked","ParallelMaskedTaskloop","ParallelMaskedTaskloopSimd","ParallelMaster","ParallelMasterTaskloop","ParallelMasterTaskloopSimd","ParallelSections","ParallelWorkshare","Parenthesized","Parsed","ParserConfig","Primary","Priority","Private","","ProcBind","","Read","Reduction","ReductionOperator","Ref","Relaxed","Release","","Requires","Reverse","Runtime","Safelen","Scan","Schedule","ScheduleKind","ScheduleModifier","Scope","Section","Sections","SeqCst","Shared","","ShiftLeft","ShiftRight","Simd","","Simdlen","Single","Sink","Source","SourceLocation","Split","Spread","Static","Stripe","Sub","Subtract","Target","TargetData","TargetEnterData","TargetExitData","TargetLoop","TargetLoopSimd","TargetParallel","TargetParallelDo","TargetParallelDoSimd","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetParallelLoopSimd","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelDo","TargetTeamsDistributeParallelDoSimd","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeParallelLoop","TargetTeamsDistributeParallelLoopSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetTeamsLoopSimd","TargetUpdate","Task","TaskIteration","Taskgraph","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelDo","TeamsDistributeParallelDoSimd","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeParallelLoop","TeamsDistributeParallelLoopSimd","TeamsDistributeSimd","TeamsLoop","TeamsLoopSimd","ThreadLimit","Threadprivate","Tile","To","ToFrom","UnaryOp","UnaryOperator","Unknown","","UnknownClause","UnknownDirective","Unparsed","Unroll","Unsupported","Update","UseDeviceAddr","UseDevicePtr","Uval","Val","ValidationContext","ValidationError","Variable","","Workdistribute","Workshare","Write","all","array_sections","as_ast","as_str","","barrier","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","build","clauses","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","collapse","column","convert","count_clauses","default","","","","default_none","default_shared","depend","dimensions","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","filter_clauses","find_clause","firstprivate","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","for_language","for_loop","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","has_clause","has_structured_block","hash","","","","","","","","","","","","","","","","","","","if_clause","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_all","is_array","is_c_family","is_collapse","is_declare","is_default","is_depend","is_device","is_firstprivate","is_fortran","is_if","is_lastprivate","is_linear","is_loop","is_map","is_num_threads","is_ordered","is_parallel","is_parsed","is_private","is_proc_bind","is_reduction","is_scalar","is_schedule","is_shared","is_simd","is_single_index","is_synchronization","is_target","is_task","is_teams","is_worksharing","kind","","language","","language_semantics_enabled","length","line","location","lower_bound","map","name","","","new","","","","","","","","nowait","num_threads","num_threads_expr","ordered","ordered_n","original_source","parallel","","parallel_for","parse_expressions","pragma_prefix","private","proc_bind","reduction","schedule","schedule_simple","schedule_with_modifiers","shared","simple","single_index","start","stride","string_only","target","task","taskwait","taskyield","teams","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_string","","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unparsed","validate","","with_language","with_language_semantics","with_parsing","with_sections","alignment","allocator","","chunk_size","","condition","data","depend_type","device_num","directive_name","grain","items","","","","","","","","","","","","","","","","","kind","","length","","limit","map_type","mapper","memory_order","modifier","","modifiers","n","","name","num","","","op","operator","priority","step","thread_num","args","array","condition","else_expr","function","indices","left","op","","operand","right","then_expr","convert_directive","parse_clause_data","parse_depend_type","parse_directive_kind","parse_identifier_list","parse_linear_clause","parse_map_clause","parse_reduction_operator","parse_schedule_clause","ClauseNotAllowed","ConflictingClauses","InvalidCombination","MissingRequiredClause","ValidationContext","ValidationError","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","","is_clause_allowed","new","to_owned","to_string","try_from","","try_into","","type_id","","validate_all","clause1","clause2","clause_name","clauses","directive","","reason","","","required_clause","C","FortranFixed","FortranFree","Language","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","from","into","is_identifier_char","lex_clause","lex_directive","lex_fortran_fixed_sentinel","lex_fortran_free_sentinel","lex_identifier_token","lex_omp","lex_pragma","normalize_fortran_identifier","skip_space1_and_comments","skip_space_and_comments","to_owned","try_from","try_into","type_id","Bare","","Clause","ClauseKind","ClauseRegistry","ClauseRegistryBuilder","ClauseRule","Custom","","Directive","DirectiveRegistry","DirectiveRegistryBuilder","DirectiveRule","Flexible","Generic","Parenthesized","","Parser","Unsupported","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","build","","builder","","clauses","clone","","clone_into","","clone_to_uninit","","default","","","","","eq","","","fmt","","","","","from","","","","","","","","","","into","","","","","","","","","","kind","name","","new","","","openmp","parse","","parse_omp_directive","parse_sequence","parse_with_name","register_bare","register_custom","","register_generic","register_parenthesized","register_with_rule","register_with_rule_mut","to_owned","","to_pragma_string","to_source_string","to_string","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","with_case_insensitive","","","","with_default_rule","","with_language","ALL","","Absent","AcqRel","Acquire","AdjustArgs","Affinity","Align","Aligned","Allocate","","Allocator","Allocators","AppendArgs","Apply","Assume","Assumes","At","Atomic","AtomicCapture","AtomicCompareCapture","AtomicDefaultMemOrder","AtomicRead","AtomicUpdate","AtomicWrite","Barrier","BeginAssumes","BeginDeclareTarget","BeginDeclareVariant","BeginMetadirective","Bind","Cancel","CancellationPoint","Capture","Collapse","Collector","Combiner","Compare","Contains","Copyin","Copyprivate","Counts","Critical","DeclareInduction","DeclareMapper","DeclareReduction","DeclareSimd","DeclareTarget","DeclareVariant","Default","Defaultmap","Depend","Depobj","Destroy","Detach","Device","DeviceResident","DeviceSafesync","DeviceType","Dispatch","DistSchedule","Distribute","DistributeParallelDo","DistributeParallelDoSimd","DistributeParallelFor","DistributeParallelForSimd","DistributeParallelLoop","DistributeParallelLoopSimd","DistributeSimd","Do","DoSimd","Doacross","DynamicAllocators","EndDeclareTarget","EndDeclareVariant","Enter","Error","Exclusive","Fail","Filter","Final","Firstprivate","Flush","For","ForSimd","From","Full","Fuse","Grainsize","GraphId","GraphReset","Groupprivate","HasDeviceAddr","Hint","Holds","If","InReduction","Inbranch","Inclusive","Indirect","Induction","Inductor","Init","InitComplete","Initializer","Interchange","Interop","","IsDevicePtr","Label","Lastprivate","Linear","Link","Local","Loop","Looprange","Map","Masked","MaskedTaskloop","MaskedTaskloopSimd","Master","Match","Memscope","Mergeable","Message","Metadirective","NoOpenmp","NoOpenmpConstructs","NoOpenmpRoutines","NoParallelism","Nocontext","Nogroup","Nontemporal","Nothing","Notinbranch","Novariants","Nowait","NumTasks","NumTeams","NumThreads","OpenMpClause","OpenMpDirective","Order","Ordered","","Otherwise","Parallel","ParallelDo","ParallelDoSimd","ParallelFor","ParallelForSimd","ParallelLoop","ParallelLoopSimd","ParallelMasked","ParallelMaskedTaskloop","ParallelMaskedTaskloopSimd","ParallelMaster","ParallelMasterTaskloop","ParallelMasterTaskloopSimd","ParallelSections","Partial","Permutation","Priority","Private","ProcBind","Public","Read","Reduction","Relaxed","Release","Replayable","Reproducible","Requires","Reverse","","ReverseOffload","Safelen","Safesync","Scan","Schedule","Scope","Section","Sections","SelfMaps","SeqCst","Severity","Shared","Simd","","Simdlen","Single","Sizes","Split","Stripe","Target","TargetData","TargetEnterData","TargetExitData","TargetLoop","TargetLoopSimd","TargetParallel","TargetParallelDo","TargetParallelDoSimd","TargetParallelFor","TargetParallelForSimd","TargetParallelLoop","TargetParallelLoopSimd","TargetSimd","TargetTeams","TargetTeamsDistribute","TargetTeamsDistributeParallelDo","TargetTeamsDistributeParallelDoSimd","TargetTeamsDistributeParallelFor","TargetTeamsDistributeParallelForSimd","TargetTeamsDistributeParallelLoop","TargetTeamsDistributeParallelLoopSimd","TargetTeamsDistributeSimd","TargetTeamsLoop","TargetTeamsLoopSimd","TargetUpdate","Task","TaskIteration","TaskReduction","Taskgraph","Taskgroup","Taskloop","TaskloopSimd","Taskwait","Taskyield","Teams","TeamsDistribute","TeamsDistributeParallelDo","TeamsDistributeParallelDoSimd","TeamsDistributeParallelFor","TeamsDistributeParallelForSimd","TeamsDistributeParallelLoop","TeamsDistributeParallelLoopSimd","TeamsDistributeSimd","TeamsLoop","TeamsLoopSimd","ThreadLimit","Threadprivate","Threads","Threadset","Tile","","To","Transparent","UnifiedAddress","UnifiedSharedMemory","Uniform","Unroll","","Untied","Update","Use","UseDeviceAddr","UseDevicePtr","UsesAllocators","Weak","When","Workdistribute","Workshare","Write","as_str","borrow","","borrow_mut","","clause_registry","clone","","clone_into","","clone_to_uninit","","directive_registry","eq","","fmt","","from","","hash","","into","","name","parser","rule","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"roup"],[4,"roup::c_api"],[57,"roup::ir"],[941,"roup::ir::ClauseData"],[991,"roup::ir::ExpressionKind"],[1003,"roup::ir::convert"],[1012,"roup::ir::validate"],[1043,"roup::ir::validate::ValidationError"],[1053,"roup::lexer"],[1082,"roup::parser"],[1227,"roup::parser::openmp"],[1525,"std::os::raw"],[1526,"core::result"],[1527,"core::any"],[1528,"roup::ir::variable"],[1529,"alloc::vec"],[1530,"roup::ir::expression"],[1531,"core::option"],[1532,"roup::ir::types"],[1533,"roup::ir::directive"],[1534,"roup::ir::builder"],[1535,"roup::ir::clause"],[1536,"roup::ir::error"],[1537,"core::ops::function"],[1538,"core::fmt"],[1539,"alloc::string"],[1540,"core::hash"],[1541,"core::convert"],[1542,"alloc::boxed"],[1543,"roup::parser::directive"],[1544,"roup::parser::clause"],[1545,"nom::internal"],[1546,"alloc::borrow"]],"i":"```````````A`hln321032103210``````````````````321032103210Db0CdEhEjC`0Cf1E`204DfEf`222224`4222Ch5333331`8768787Bj244Dd``D`84DlDj6`::48=888888:`9:`Cl9<;`;```9;99999999=99699=9`Dn<``<Cn=;;;7<;?==;?8=:`19=229;;Eb>>`>`Eh?`CdEj1?2C``E`00;03`0334Cj54953Df81233363`32:222222222222222EfAn`?5:5`5Dd6`DhDbCf188Ch:9:``9992?:==89:9Cl0`:D`2;?>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<;;338`;BjEb09=08>>77```Dn>>9AhAj<<BfBlBnCd<;Cj;Cn;?DdDfDhDjDl=C`E`;EbEdAnB`EfEhEjBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjBn=CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjBn5`=0;540001CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAj<<BnCd0Cf0Ch0Cj0Cl0Cn0D`0Db0Dd0Df0Dh0Dj0Dl0Dn0C`0E`0Bl0Eb0EdAn0B`EfEhEjBh0Bj0Bf0Ah0Aj0:Bn=0CdCfChCjClCnD`DbDdDfDhDjDlDn000C`E`BlEbEdAnB`EfEhEjBhBjBf00AhAj000<=CdCfChCjClCnD`DbDdDfDhDjDlE`EhEjBhBjBfBn0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAj103>=>>>>3>>>=>>>=9>>>0>>=1=====<8<::14<1Bn=310=;:53210000090=0;40000000=252;00==0CdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbAnBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAjBnCdCfChCjClCnD`DbDdDfDhDjDlDnC`E`BlEbEdAnB`EfEhEjBhBjBfAhAj9`<:::0GdGfGhGjGlGnH`HbHd3HfHhHjHlHnI`IbIdIfIhIj<IlInGdGfJ`JbGjGlJdJfJh??JjHl;6JlJnH`K`KbKd7I`KfInKhKjKlL`021Lb0Ld012`````````Gb000``Lj101111111010100110101010Ll0LnM`1Mb2310Md00`0000000000```````````0000NhNb`````0Nd````1021`1MlMjN`MnNf7Lh7Lf7654329180753640878787654329109110065432918076543291807110532`42`6455335558701106543291807654329180765432918076543532O`Nn111111110101100100010000000010011111111100000001110111111010000000000110010111110001101110111111111111101011111101100001111011111110111111``1101000000000000001111111111110101110100011111010100000000000000000000000000000010000000000000000010111011111101111111100101010`101010`10101010101`110101010","f":"````````{{}b}00{d{{d{c}}}{}}000{{{d{f}}}{{d{fc}}}{}}000{cc{}}000{{}c{}}000{hb}{hj}{lj}{{lh}b}333{hn}{A`b}{A`l}{A`j}2{A`Ab}{AbA`}{{Abb}A`}{nj}{{nb}Ab}{nb}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dAf}000````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}Ah}{AjAl}{{{d{An}}}{{Bb{{d{B`}}}}}}{{{d{An}}}{{d{Bd}}}}{{{d{Bf}}}{{d{Bd}}}}{{BhBj}Bl}{d{{d{c}}}{}}00000000000000000000000000000{{{d{f}}}{{d{fc}}}{}}00000000000000000000000000000{{BnBhBj}Bl}{{{d{Bl}}}{{d{{Cb{C`}}}}}}{{{d{Cd}}}Cd}{{{d{Cf}}}Cf}{{{d{Ch}}}Ch}{{{d{Cj}}}Cj}{{{d{Cl}}}Cl}{{{d{Cn}}}Cn}{{{d{D`}}}D`}{{{d{Db}}}Db}{{{d{Dd}}}Dd}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{{d{C`}}}C`}{{{d{E`}}}E`}{{{d{Bl}}}Bl}{{{d{Eb}}}Eb}{{{d{Ed}}}Ed}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{Bh}}}Bh}{{{d{Bj}}}Bj}{{{d{Bf}}}Bf}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{d{d{fc}}}j{}}0000000000000000000000000000{{dEl}j}0000000000000000000000000000{{Bn{d{Bd}}}Bn}{BhEn}`{{{d{Bl}}c}F`{{Ff{{d{C`}}}{{Fb{Fd}}}}}}{{BnCn}Bn}{{}Ed}{{}Bh}{{}Bj}{BnBn}0{{BnCl{d{{Cb{{d{Bd}}}}}}}Bn}{{{d{Aj}}}F`}{{{d{Cd}}{d{Cd}}}Fd}{{{d{Cf}}{d{Cf}}}Fd}{{{d{Ch}}{d{Ch}}}Fd}{{{d{Cj}}{d{Cj}}}Fd}{{{d{Cl}}{d{Cl}}}Fd}{{{d{Cn}}{d{Cn}}}Fd}{{{d{D`}}{d{D`}}}Fd}{{{d{Db}}{d{Db}}}Fd}{{{d{Dd}}{d{Dd}}}Fd}{{{d{Df}}{d{Df}}}Fd}{{{d{Dh}}{d{Dh}}}Fd}{{{d{Dj}}{d{Dj}}}Fd}{{{d{Dl}}{d{Dl}}}Fd}{{{d{Dn}}{d{Dn}}}Fd}{{{d{C`}}{d{C`}}}Fd}{{{d{E`}}{d{E`}}}Fd}{{{d{Bl}}{d{Bl}}}Fd}{{{d{Eb}}{d{Eb}}}Fd}{{{d{Ed}}{d{Ed}}}Fd}{{{d{An}}{d{An}}}Fd}{{{d{B`}}{d{B`}}}Fd}{{{d{Ef}}{d{Ef}}}Fd}{{{d{Eh}}{d{Eh}}}Fd}{{{d{Ej}}{d{Ej}}}Fd}{{{d{Bh}}{d{Bh}}}Fd}{{{d{Bj}}{d{Bj}}}Fd}{{{d{Bf}}{d{Bf}}}Fd}{{{d{Ah}}{d{Ah}}}Fd}{{{d{Aj}}{d{Aj}}}Fd}{{{d{Bl}}c}{{Al{{d{C`}}}}}{{Ff{{d{C`}}}{{Fb{Fd}}}}}}{{{d{Bl}}c}{{Bb{{d{C`}}}}}{{Ff{{d{C`}}}{{Fb{Fd}}}}}}{{Bn{d{{Cb{{d{Bd}}}}}}}Bn}{{{d{Cd}}{d{fFh}}}Fj}0{{{d{Cf}}{d{fFh}}}Fj}0{{{d{Ch}}{d{fFh}}}Fj}0{{{d{Cj}}{d{fFh}}}Fj}0{{{d{Cl}}{d{fFh}}}Fj}0{{{d{Cn}}{d{fFh}}}Fj}0{{{d{D`}}{d{fFh}}}Fj}0{{{d{Db}}{d{fFh}}}Fj}0{{{d{Dd}}{d{fFh}}}Fj}0{{{d{Df}}{d{fFh}}}Fj}0{{{d{Dh}}{d{fFh}}}Fj}0{{{d{Dj}}{d{fFh}}}Fj}0{{{d{Dl}}{d{fFh}}}Fj}0{{{d{Dn}}{d{fFh}}}Fj}0{{{d{C`}}{d{fFh}}}Fj}0{{{d{E`}}{d{fFh}}}Fj}0{{{d{Bl}}{d{fFh}}}Fj}0{{{d{Eb}}{d{fFh}}}Fj}0{{{d{Ed}}{d{fFh}}}Fj}{{{d{An}}{d{fFh}}}Fj}0{{{d{B`}}{d{fFh}}}Fj}{{{d{Ef}}{d{fFh}}}Fj}{{{d{Eh}}{d{fFh}}}Fj}{{{d{Ej}}{d{fFh}}}Fj}{{{d{Bh}}{d{fFh}}}Fj}0{{{d{Bj}}{d{fFh}}}Fj}0{{{d{Bf}}{d{fFh}}}Fj}0{{{d{Ah}}{d{fFh}}}Fj}0{{{d{Aj}}{d{fFh}}}Fj}0{{{d{Ed}}Bj}Ed}{{}Bn}{{Ch{Bb{An}}BhBj}Bl}{cc{}}0000000000000{BfDn}1{AjDn}{AnDn}333333333333{FlBf}{{{d{Bd}}}Bf}55{{{d{Bd}}}Aj}6{BfAj}{FlAj}{{{d{Bl}}c}Fd{{Ff{{d{C`}}}{{Fb{Fd}}}}}}{{{d{E`}}}Fd}{{{d{Cd}}{d{fc}}}jFn}{{{d{Cf}}{d{fc}}}jFn}{{{d{Ch}}{d{fc}}}jFn}{{{d{Cj}}{d{fc}}}jFn}{{{d{Cl}}{d{fc}}}jFn}{{{d{Cn}}{d{fc}}}jFn}{{{d{D`}}{d{fc}}}jFn}{{{d{Db}}{d{fc}}}jFn}{{{d{Dd}}{d{fc}}}jFn}{{{d{Df}}{d{fc}}}jFn}{{{d{Dh}}{d{fc}}}jFn}{{{d{Dj}}{d{fc}}}jFn}{{{d{Dl}}{d{fc}}}jFn}{{{d{E`}}{d{fc}}}jFn}{{{d{Eh}}{d{fc}}}jFn}{{{d{Ej}}{d{fc}}}jFn}{{{d{Bh}}{d{fc}}}jFn}{{{d{Bj}}{d{fc}}}jFn}{{{d{Bf}}{d{fc}}}jFn}{{Bn{d{Bd}}}Bn}{{}c{}}00000000000000000000000000000{{{d{Ah}}}Fd}{{{d{Aj}}}Fd}{BjFd}{{{d{C`}}}Fd}{{{d{E`}}}Fd}1111211101110{{{d{An}}}Fd}2224221511111{{{d{Bl}}}E`}{B`Ef}{{{d{Bl}}}Bj}{{{d{Ed}}}Bj}{{{d{Ed}}}Fd}{AhBb}{BhEn}{{{d{Bl}}}Bh}2{{BnCf{d{{Cb{{d{Bd}}}}}}}Bn}{{{d{Bl}}}{{d{Bd}}}}{{{d{Bf}}}{{d{Bd}}}}{{{d{Aj}}}{{d{Bd}}}}{E`Bn}{{E`{d{Bd}}{Al{C`}}BhBj}Bl}{{FdBj}Ed}{{c{d{Ed}}}An{{G`{Fl}}}}{{EnEn}Bh}{cBf{{G`{Fl}}}}{{{Bb{An}}{Bb{An}}{Bb{An}}}Ah}{cAj{{G`{Fl}}}}{BnBn}{{Bnb}Bn}{{Bn{d{Bd}}}Bn}20{B`Fl}{{}Bn}{{{Bb{Cn}}BhBj}Bl}1{EdFd}{Bj{{d{Bd}}}}{{Bn{d{{Cb{{d{Bd}}}}}}}Bn}{{BnD`}Bn}{{BnCd{d{{Cb{{d{Bd}}}}}}}Bn}{{BnCh{Bb{{d{Bd}}}}}Bn}{{BnCh}Bn}{{BnCh{Al{Cj}}{Bb{{d{Bd}}}}}Bn}5{{E`{d{Bd}}BhBj}Bl}{AnAh}{{}Bh}{AhBb}{BjEd}>>{{BhBj}Bl}0?{dc{}}0000000000000000000000000000{dFl}00000000000000000000000{c{{Ad{e}}}{}{}}00000000000000000000000000000{{}{{Ad{c}}}{}}00000000000000000000000000000{dAf}00000000000000000000000000000{cAn{{G`{Fl}}}}`{{{d{Bl}}}{{Ad{j{Al{Gb}}}}}}{{EdBj}Ed}{{EdFd}Ed}:{{c{Al{Ah}}}Aj{{G`{Fl}}}}{GdBb}{GfBb}{GhBf}{GjBb}{GlBb}{GnAn}{H`Bb}{HbCl}{HdAn}{GnBb}{HfAn}{HhAl}{HjAl}{HlAl}{HnAl}{I`Al}{IbAl}{IdAl}{IfAl}{IhAl}{IjAl}{HbAl}{IlAl}{InAl}{GdAl}{GfAl}{J`Al}{JbAl}{GjCh}{GlCh}{JdAn}{JfAn}{JhAn}{IbBb}0{JjBb}{HlBb}{InBb}{GjAl}{JlAn}{JnBb}{H`Bf}{K`An}{KbAn}{KdAn}{JjDd}{I`Cd}{KfAn}:{KhAn}{KjAl}{KlKn}{L`Kn}0{KjFl}{KlAl}{LbKn}{LbEh}{LdEj}{LdKn}36{{{d{Lf}}BhBj{d{Ed}}}{{Ad{BlEb}}}}{{{d{Lh}}{d{Ed}}}{{Ad{C`Eb}}}}{{{d{Bd}}}{{Ad{ClEb}}}}{{{d{Bd}}}{{Ad{E`Eb}}}}{{{d{Bd}}{d{Ed}}}{{Ad{{Al{Dn}}Eb}}}}{{{d{Bd}}{d{Ed}}}{{Ad{C`Eb}}}}0{{{d{Bd}}}{{Ad{CdEb}}}}1``````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Gb}}}Gb}{{d{d{fc}}}j{}}{{dEl}j}{{{d{Gb}}{d{Gb}}}Fd}{{{d{Gb}}{d{fFh}}}Fj}0{cc{}}0{{}c{}}0{{{d{Lj}}{d{C`}}}{{Ad{jGb}}}}{E`Lj}{dc{}}{dFl}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0{{{d{Lj}}{d{{Cb{C`}}}}}{{Ad{j{Al{Gb}}}}}}{LlFl}0{LnFl}{M`Al}1{MbFl}23{M`Fl}1````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Md}}}Md}{{d{d{fc}}}j{}}{{dEl}j}{{}Md}{{{d{Md}}{d{Md}}}Fd}{{{d{Md}}{d{fFh}}}Fj}{cc{}}{{}c{}}{MfFd}{{{d{Bd}}}{{Mh{{d{Bd}}{d{Bd}}}}}}000000{{{d{Bd}}}Fl}11{dc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dAf}```````````````````{d{{d{c}}}{}}000000000{{{d{f}}}{{d{fc}}}{}}000000000{MjMl}{MnN`}{{}Mj}{{}Mn}{LfAl}{{{d{Nb}}}Nb}{{{d{Nd}}}Nd}{{d{d{fc}}}j{}}0{{dEl}j}0{{}Ml}7{{}N`}7{{}Nf}{{{d{Nh}}{d{Nh}}}Fd}{{{d{Lh}}{d{Lh}}}Fd}{{{d{Lf}}{d{Lf}}}Fd}{{{d{Nh}}{d{fFh}}}Fj}{{{d{Lh}}{d{fFh}}}Fj}0{{{d{Lf}}{d{fFh}}}Fj}0{cc{}}000000000{{}c{}}000000000{LhNh}{LhNj}{LfNj}{{}Mj}{{}Mn}{{N`Ml}Nf}`{{{d{N`}}{d{Bd}}{d{Ml}}}{{Mh{{d{Bd}}Lf}}}}{{{d{Nf}}{d{Bd}}}{{Mh{{d{Bd}}Lf}}}}{{{d{Bd}}}{{Mh{{d{Bd}}Lf}}}}{{{d{Ml}}{d{Bd}}}{{Mh{{d{Bd}}{Al{Lh}}}}}}{{{d{N`}}{Nj{Bd}}{d{Bd}}{d{Ml}}}{{Mh{{d{Bd}}Lf}}}}{{Mj{d{Bd}}}Mj}{{Mj{d{Bd}}{Nl{{Nj{Bd}}{d{Bd}}}{{Fb{{Mh{{d{Bd}}Lh}}}}}}}Mj}{{Mn{d{Bd}}{Nl{{Nj{Bd}}{d{Bd}}{d{Ml}}}{{Fb{{Mh{{d{Bd}}Lf}}}}}}}Mn}{{Mn{d{Bd}}}Mn}3{{Mj{d{Bd}}Nb}Mj}{{{d{fMj}}{d{Bd}}Nb}{{d{fMj}}}}{dc{}}0{{{d{Lf}}}Fl}{{{d{Lh}}}Fl}{dFl}0{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{dAf}000000000{{MlFd}Ml}{{MjFd}Mj}{{N`Fd}N`}{{MnFd}Mn}{{MjNb}Mj}{{MnNd}Mn}{{NfMd}Nf}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{Nn{{d{Bd}}}}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{}Ml}{{{d{O`}}}O`}{{{d{Nn}}}Nn}{{d{d{fc}}}j{}}0{{dEl}j}0{{}N`}{{{d{O`}}{d{O`}}}Fd}{{{d{Nn}}{d{Nn}}}Fd}{{{d{O`}}{d{fFh}}}Fj}{{{d{Nn}}{d{fFh}}}Fj}{cc{}}0{{{d{O`}}{d{fc}}}jFn}{{{d{Nn}}{d{fc}}}jFn}{{}c{}}0{O`{{d{Bd}}}}{{}Nf}{O`Nb}{dc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0","D":"DDn","p":[[1,"i32"],[1,"reference",null,null,1],[0,"mut"],[5,"OmpClause",4],[1,"unit"],[5,"OmpClauseIterator",4],[5,"OmpStringList",4],[5,"OmpDirective",4],[8,"c_char",1525],[6,"Result",1526,null,1],[5,"TypeId",1527],[5,"ArraySection",57,1528],[5,"Variable",57,1528],[5,"Vec",1529],[6,"Expression",57,1530],[5,"ExpressionAst",57,1530],[6,"Option",1531,null,1],[1,"str"],[5,"Identifier",57,1528],[5,"SourceLocation",57,1532],[6,"Language",57,1532],[5,"DirectiveIR",57,1533],[5,"DirectiveBuilder",57,1534],[6,"ClauseData",57,1535],[1,"slice"],[6,"ReductionOperator",57,1535],[6,"MapType",57,1535],[6,"ScheduleKind",57,1535],[6,"ScheduleModifier",57,1535],[6,"DependType",57,1535],[6,"DefaultKind",57,1535],[6,"ProcBind",57,1535],[6,"MemoryOrder",57,1535],[6,"AtomicOp",57,1535],[6,"DeviceType",57,1535],[6,"LinearModifier",57,1535],[6,"LastprivateModifier",57,1535],[6,"OrderKind",57,1535],[6,"ClauseItem",57,1535],[6,"DirectiveKind",57,1533],[6,"ConversionError",57,1536],[5,"ParserConfig",57,1530],[6,"ExpressionKind",57,1530],[6,"BinaryOperator",57,1530],[6,"UnaryOperator",57,1530],[1,"u8"],[1,"u32"],[1,"usize"],[17,"Output"],[1,"bool"],[10,"Fn",1537],[5,"Formatter",1538],[8,"Result",1538],[5,"String",1539],[10,"Hasher",1540],[10,"Into",1541,null,1],[6,"ValidationError",1012],[15,"Aligned",941],[15,"Allocate",941],[15,"Allocator",941],[15,"Schedule",941],[15,"DistSchedule",941],[15,"If",941],[15,"Generic",941],[15,"Depend",941],[15,"Device",941],[15,"Grainsize",941],[15,"Private",941],[15,"Firstprivate",941],[15,"Lastprivate",941],[15,"Shared",941],[15,"Reduction",941],[15,"Map",941],[15,"UseDevicePtr",941],[15,"UseDeviceAddr",941],[15,"IsDevicePtr",941],[15,"HasDeviceAddr",941],[15,"Affinity",941],[15,"Linear",941],[15,"Copyin",941],[15,"Copyprivate",941],[15,"Safelen",941],[15,"Simdlen",941],[15,"ThreadLimit",941],[15,"AtomicOperation",941],[15,"Collapse",941],[15,"Ordered",941],[15,"NumThreads",941],[15,"NumTeams",941],[15,"NumTasks",941],[15,"Priority",941],[15,"Filter",941],[15,"Call",991],[15,"ArrayAccess",991],[5,"Box",1542,null,1],[15,"Conditional",991],[15,"BinaryOp",991],[15,"UnaryOp",991],[5,"Directive",1082,1543],[5,"Clause",1082,1544],[5,"ValidationContext",1012],[15,"ConflictingClauses",1043],[15,"ClauseNotAllowed",1043],[15,"InvalidCombination",1043],[15,"MissingRequiredClause",1043],[6,"Language",1053],[1,"char"],[8,"IResult",1545],[5,"ClauseRegistryBuilder",1082,1544],[5,"ClauseRegistry",1082,1544],[5,"DirectiveRegistryBuilder",1082,1543],[5,"DirectiveRegistry",1082,1543],[6,"ClauseRule",1082,1544],[6,"DirectiveRule",1082,1543],[5,"Parser",1082],[6,"ClauseKind",1082,1544],[6,"Cow",1546],[1,"fn"],[6,"OpenMpDirective",1227],[6,"OpenMpClause",1227]],"r":[[57,1535],[58,1535],[59,1535],[60,1530],[61,1530],[62,1535],[63,1535],[64,1535],[65,1535],[66,1533],[67,1535],[68,1533],[69,1530],[70,1535],[71,1530],[72,1528],[73,1533],[74,1533],[75,1533],[76,1533],[77,1533],[78,1535],[79,1535],[80,1535],[81,1533],[82,1533],[83,1533],[84,1535],[85,1535],[86,1533],[87,1533],[88,1533],[89,1533],[90,1533],[91,1530],[92,1530],[93,1535],[94,1530],[95,1530],[96,1535],[97,1530],[98,1535],[99,1530],[100,1532],[101,1530],[102,1533],[103,1533],[104,1535],[105,1535],[106,1535],[107,1535],[108,1535],[109,1530],[110,1535],[111,1535],[112,1530],[113,1536],[114,1535],[115,1535],[116,1532],[117,1533],[118,1535],[119,1533],[120,1533],[121,1533],[122,1533],[123,1533],[124,1533],[125,1535],[126,1535],[127,1535],[128,1535],[129,1535],[130,1535],[131,1533],[132,1530],[133,1535],[134,1535],[135,1535],[136,1534],[137,1533],[138,1533],[139,1533],[140,1535],[141,1533],[142,1533],[143,1533],[144,1533],[145,1533],[146,1533],[147,1533],[148,1533],[149,1530],[150,1533],[151,1533],[152,1535],[153,1533],[154,1533],[155,1530],[156,1533],[157,1530],[158,1535],[159,1535],[160,1530],[161,1530],[162,1535],[163,1535],[164,1535],[165,1533],[166,1533],[167,1533],[168,1532],[169,1535],[170,1533],[171,1530],[172,1535],[173,1535],[174,1533],[175,1530],[176,1535],[177,1535],[178,1535],[179,1528],[180,1535],[181,1530],[182,1535],[183,1535],[184,1535],[185,1530],[186,1533],[187,1533],[188,1536],[189,1535],[190,1535],[191,1532],[192,1535],[193,1535],[194,1530],[195,1535],[196,1535],[197,1535],[198,1530],[199,1535],[200,1533],[201,1530],[202,1535],[203,1535],[204,1533],[205,1533],[206,1533],[207,1535],[208,1533],[209,1535],[210,1535],[211,1533],[212,1535],[213,1535],[214,1530],[215,1535],[216,1530],[217,1535],[218,1535],[219,1530],[220,1530],[221,1535],[222,1535],[223,1535],[224,1533],[225,1535],[226,1535],[227,1535],[228,1530],[229,1535],[230,1535],[231,1535],[232,1533],[233,1535],[234,1533],[235,1533],[236,1533],[237,1533],[238,1533],[239,1533],[240,1533],[241,1533],[242,1533],[243,1533],[244,1533],[245,1533],[246,1533],[247,1533],[248,1533],[249,1530],[250,1530],[251,1530],[252,1535],[253,1535],[254,1535],[255,1535],[256,1535],[257,1535],[258,1535],[259,1535],[260,1535],[261,1535],[262,1535],[263,1535],[264,1535],[265,1533],[266,1533],[267,1535],[268,1535],[269,1533],[270,1535],[271,1535],[272,1535],[273,1533],[274,1533],[275,1533],[276,1535],[277,1535],[278,1535],[279,1530],[280,1530],[281,1535],[282,1533],[283,1535],[284,1533],[285,1535],[286,1535],[287,1532],[288,1533],[289,1535],[290,1535],[291,1533],[292,1530],[293,1535],[294,1533],[295,1533],[296,1533],[297,1533],[298,1533],[299,1533],[300,1533],[301,1533],[302,1533],[303,1533],[304,1533],[305,1533],[306,1533],[307,1533],[308,1533],[309,1533],[310,1533],[311,1533],[312,1533],[313,1533],[314,1533],[315,1533],[316,1533],[317,1533],[318,1533],[319,1533],[320,1533],[321,1533],[322,1533],[323,1533],[324,1533],[325,1533],[326,1533],[327,1533],[328,1533],[329,1533],[330,1533],[331,1533],[332,1533],[333,1533],[334,1533],[335,1533],[336,1533],[337,1533],[338,1533],[339,1535],[340,1533],[341,1533],[342,1535],[343,1535],[344,1530],[345,1530],[346,1533],[347,1532],[348,1536],[349,1536],[350,1530],[351,1533],[352,1536],[353,1535],[354,1535],[355,1535],[356,1535],[357,1535],[358,1012],[359,1012],[360,1528],[361,1535],[362,1533],[363,1533],[364,1535],[365,1528],[366,1528],[367,1530],[368,1530],[369,1528],[370,1533],[371,1534],[372,1535],[373,1535],[374,1535],[375,1535],[376,1535],[377,1535],[378,1535],[379,1535],[380,1535],[381,1535],[382,1535],[383,1535],[384,1535],[385,1535],[386,1535],[387,1533],[388,1533],[389,1536],[390,1530],[391,1530],[392,1530],[393,1530],[394,1530],[395,1530],[396,1532],[397,1532],[398,1528],[399,1528],[400,1528],[401,1534],[402,1535],[403,1535],[404,1535],[405,1535],[406,1535],[407,1535],[408,1535],[409,1535],[410,1535],[411,1535],[412,1535],[413,1535],[414,1535],[415,1535],[416,1535],[417,1533],[418,1533],[419,1536],[420,1530],[421,1530],[422,1530],[423,1530],[424,1530],[425,1530],[426,1532],[427,1532],[428,1528],[429,1528],[430,1528],[431,1534],[432,1533],[433,1535],[434,1535],[435,1535],[436,1535],[437,1535],[438,1535],[439,1535],[440,1535],[441,1535],[442,1535],[443,1535],[444,1535],[445,1535],[446,1535],[447,1535],[448,1533],[449,1533],[450,1536],[451,1530],[452,1530],[453,1530],[454,1530],[455,1530],[456,1530],[457,1532],[458,1532],[459,1528],[460,1528],[461,1528],[462,1535],[463,1535],[464,1535],[465,1535],[466,1535],[467,1535],[468,1535],[469,1535],[470,1535],[471,1535],[472,1535],[473,1535],[474,1535],[475,1535],[476,1535],[477,1533],[478,1533],[479,1536],[480,1530],[481,1530],[482,1530],[483,1530],[484,1530],[485,1530],[486,1532],[487,1532],[488,1528],[489,1528],[490,1528],[491,1535],[492,1535],[493,1535],[494,1535],[495,1535],[496,1535],[497,1535],[498,1535],[499,1535],[500,1535],[501,1535],[502,1535],[503,1535],[504,1535],[505,1535],[506,1533],[507,1533],[508,1536],[509,1530],[510,1530],[511,1530],[512,1530],[513,1530],[514,1530],[515,1532],[516,1532],[517,1528],[518,1528],[519,1528],[520,1534],[521,1532],[523,1533],[524,1534],[525,1530],[526,1532],[527,1532],[528,1534],[529,1534],[530,1534],[531,1528],[532,1535],[533,1535],[534,1535],[535,1535],[536,1535],[537,1535],[538,1535],[539,1535],[540,1535],[541,1535],[542,1535],[543,1535],[544,1535],[545,1535],[546,1535],[547,1533],[548,1533],[549,1536],[550,1530],[551,1530],[552,1530],[553,1530],[554,1530],[555,1530],[556,1532],[557,1532],[558,1528],[559,1528],[560,1528],[561,1533],[562,1533],[563,1534],[564,1535],[565,1535],[566,1535],[567,1535],[568,1535],[569,1535],[570,1535],[571,1535],[572,1535],[573,1535],[574,1535],[575,1535],[576,1535],[577,1535],[578,1535],[579,1535],[580,1535],[581,1535],[582,1535],[583,1535],[584,1535],[585,1535],[586,1535],[587,1535],[588,1535],[589,1535],[590,1535],[591,1535],[592,1535],[593,1535],[594,1533],[595,1533],[596,1533],[597,1533],[598,1536],[599,1536],[600,1530],[601,1530],[602,1530],[603,1530],[604,1530],[605,1530],[606,1530],[607,1532],[608,1532],[609,1532],[610,1532],[611,1528],[612,1528],[613,1528],[614,1528],[615,1528],[616,1528],[617,1530],[618,1534],[619,1533],[620,1534],[621,1535],[622,1535],[623,1535],[624,1535],[625,1535],[626,1535],[627,1535],[628,1535],[629,1535],[630,1535],[631,1535],[632,1535],[633,1535],[634,1535],[635,1535],[636,1535],[637,1535],[638,1535],[639,1533],[640,1533],[641,1536],[642,1530],[643,1530],[644,1530],[645,1530],[646,1530],[647,1530],[648,1532],[649,1532],[650,1528],[651,1528],[652,1528],[653,1528],[654,1528],[655,1528],[656,1528],[657,1528],[658,1533],[659,1533],[660,1535],[661,1535],[662,1535],[663,1535],[664,1535],[665,1535],[666,1535],[667,1535],[668,1535],[669,1535],[670,1535],[671,1535],[672,1535],[673,1533],[674,1530],[675,1530],[676,1532],[677,1532],[678,1528],[679,1534],[680,1534],[681,1535],[682,1535],[683,1535],[684,1535],[685,1535],[686,1535],[687,1535],[688,1535],[689,1535],[690,1535],[691,1535],[692,1535],[693,1535],[694,1535],[695,1535],[696,1533],[697,1533],[698,1536],[699,1530],[700,1530],[701,1530],[702,1530],[703,1530],[704,1530],[705,1532],[706,1532],[707,1528],[708,1528],[709,1528],[710,1528],[711,1528],[712,1532],[713,1535],[714,1533],[715,1535],[716,1535],[717,1535],[718,1535],[719,1532],[720,1535],[721,1535],[722,1535],[723,1533],[724,1535],[725,1535],[726,1535],[727,1533],[728,1530],[729,1535],[730,1535],[731,1535],[732,1528],[733,1535],[734,1535],[735,1533],[736,1528],[737,1533],[738,1533],[739,1533],[740,1533],[741,1533],[742,1533],[743,1530],[744,1533],[745,1530],[746,1530],[747,1528],[748,1532],[749,1533],[750,1528],[751,1534],[752,1533],[753,1528],[754,1528],[755,1534],[756,1533],[757,1530],[758,1530],[759,1532],[760,1528],[761,1528],[762,1528],[763,1534],[764,1534],[765,1534],[766,1534],[767,1534],[768,1530],[769,1534],[770,1533],[771,1534],[772,1530],[773,1532],[774,1534],[775,1534],[776,1534],[777,1534],[778,1534],[779,1534],[780,1534],[781,1533],[782,1528],[783,1532],[784,1528],[785,1530],[786,1534],[787,1534],[788,1533],[789,1533],[790,1534],[791,1535],[792,1535],[793,1535],[794,1535],[795,1535],[796,1535],[797,1535],[798,1535],[799,1535],[800,1535],[801,1535],[802,1535],[803,1535],[804,1535],[805,1535],[806,1533],[807,1533],[808,1536],[809,1530],[810,1530],[811,1530],[812,1530],[813,1530],[814,1530],[815,1532],[816,1532],[817,1528],[818,1528],[819,1528],[820,1535],[821,1535],[822,1535],[823,1535],[824,1535],[825,1535],[826,1535],[827,1535],[828,1535],[829,1535],[830,1535],[831,1535],[832,1535],[833,1535],[834,1535],[835,1533],[836,1533],[837,1536],[838,1530],[839,1532],[840,1532],[841,1528],[842,1528],[843,1528],[844,1534],[845,1535],[846,1535],[847,1535],[848,1535],[849,1535],[850,1535],[851,1535],[852,1535],[853,1535],[854,1535],[855,1535],[856,1535],[857,1535],[858,1535],[859,1535],[860,1533],[861,1533],[862,1536],[863,1530],[864,1530],[865,1530],[866,1530],[867,1530],[868,1530],[869,1532],[870,1532],[871,1528],[872,1528],[873,1528],[874,1534],[875,1535],[876,1535],[877,1535],[878,1535],[879,1535],[880,1535],[881,1535],[882,1535],[883,1535],[884,1535],[885,1535],[886,1535],[887,1535],[888,1535],[889,1535],[890,1533],[891,1533],[892,1536],[893,1530],[894,1530],[895,1530],[896,1530],[897,1530],[898,1530],[899,1532],[900,1532],[901,1528],[902,1528],[903,1528],[904,1534],[905,1535],[906,1535],[907,1535],[908,1535],[909,1535],[910,1535],[911,1535],[912,1535],[913,1535],[914,1535],[915,1535],[916,1535],[917,1535],[918,1535],[919,1535],[920,1533],[921,1533],[922,1536],[923,1530],[924,1530],[925,1530],[926,1530],[927,1530],[928,1530],[929,1532],[930,1532],[931,1528],[932,1528],[933,1528],[934,1530],[936,1533],[937,1530],[938,1530],[939,1530],[940,1528],[1082,1544],[1083,1544],[1084,1544],[1085,1544],[1086,1544],[1087,1544],[1088,1544],[1089,1544],[1090,1543],[1091,1543],[1092,1543],[1093,1543],[1094,1543],[1095,1544],[1096,1543],[1097,1544],[1098,1544],[1100,1544],[1101,1544],[1102,1544],[1103,1543],[1104,1543],[1106,1544],[1107,1544],[1108,1544],[1109,1543],[1110,1543],[1111,1544],[1112,1544],[1113,1543],[1114,1543],[1116,1544],[1117,1544],[1118,1544],[1119,1543],[1120,1543],[1121,1544],[1122,1543],[1123,1544],[1124,1543],[1125,1543],[1126,1544],[1127,1543],[1128,1544],[1129,1543],[1130,1544],[1131,1543],[1132,1544],[1133,1544],[1134,1543],[1135,1543],[1137,1544],[1138,1544],[1139,1543],[1140,1544],[1141,1544],[1142,1544],[1143,1543],[1144,1543],[1145,1544],[1146,1544],[1147,1543],[1148,1543],[1150,1544],[1151,1544],[1152,1544],[1153,1543],[1154,1543],[1155,1544],[1156,1544],[1157,1543],[1158,1543],[1160,1544],[1161,1544],[1162,1544],[1163,1543],[1164,1543],[1165,1544],[1166,1544],[1167,1543],[1168,1544],[1169,1543],[1172,1543],[1175,1544],[1176,1543],[1177,1544],[1178,1544],[1179,1543],[1180,1543],[1181,1544],[1182,1544],[1183,1544],[1184,1544],[1185,1543],[1186,1543],[1187,1544],[1188,1544],[1189,1543],[1190,1544],[1191,1544],[1192,1543],[1193,1543],[1195,1544],[1196,1544],[1197,1544],[1198,1543],[1199,1543],[1200,1544],[1201,1544],[1202,1543],[1203,1543],[1205,1544],[1206,1544],[1207,1544],[1208,1543],[1209,1543],[1210,1544],[1211,1544],[1212,1543],[1213,1543],[1215,1544],[1216,1544],[1217,1544],[1218,1543],[1219,1543],[1220,1544],[1221,1544],[1222,1543],[1223,1543],[1224,1544],[1225,1543]],"b":[[564,"impl-Display-for-ReductionOperator"],[565,"impl-Debug-for-ReductionOperator"],[566,"impl-Debug-for-MapType"],[567,"impl-Display-for-MapType"],[568,"impl-Display-for-ScheduleKind"],[569,"impl-Debug-for-ScheduleKind"],[570,"impl-Debug-for-ScheduleModifier"],[571,"impl-Display-for-ScheduleModifier"],[572,"impl-Debug-for-DependType"],[573,"impl-Display-for-DependType"],[574,"impl-Debug-for-DefaultKind"],[575,"impl-Display-for-DefaultKind"],[576,"impl-Debug-for-ProcBind"],[577,"impl-Display-for-ProcBind"],[578,"impl-Display-for-MemoryOrder"],[579,"impl-Debug-for-MemoryOrder"],[580,"impl-Display-for-AtomicOp"],[581,"impl-Debug-for-AtomicOp"],[582,"impl-Display-for-DeviceType"],[583,"impl-Debug-for-DeviceType"],[584,"impl-Display-for-LinearModifier"],[585,"impl-Debug-for-LinearModifier"],[586,"impl-Debug-for-LastprivateModifier"],[587,"impl-Display-for-LastprivateModifier"],[588,"impl-Display-for-OrderKind"],[589,"impl-Debug-for-OrderKind"],[590,"impl-Debug-for-ClauseItem"],[591,"impl-Display-for-ClauseItem"],[592,"impl-Display-for-ClauseData"],[593,"impl-Debug-for-ClauseData"],[594,"impl-Display-for-DirectiveKind"],[595,"impl-Debug-for-DirectiveKind"],[596,"impl-Display-for-DirectiveIR"],[597,"impl-Debug-for-DirectiveIR"],[598,"impl-Display-for-ConversionError"],[599,"impl-Debug-for-ConversionError"],[601,"impl-Display-for-Expression"],[602,"impl-Debug-for-Expression"],[607,"impl-Display-for-SourceLocation"],[608,"impl-Debug-for-SourceLocation"],[609,"impl-Debug-for-Language"],[610,"impl-Display-for-Language"],[611,"impl-Debug-for-Identifier"],[612,"impl-Display-for-Identifier"],[613,"impl-Display-for-ArraySection"],[614,"impl-Debug-for-ArraySection"],[615,"impl-Debug-for-Variable"],[616,"impl-Display-for-Variable"],[634,"impl-From%3CIdentifier%3E-for-ClauseItem"],[636,"impl-From%3CVariable%3E-for-ClauseItem"],[637,"impl-From%3CExpression%3E-for-ClauseItem"],[650,"impl-From%3CString%3E-for-Identifier"],[651,"impl-From%3C%26str%3E-for-Identifier"],[654,"impl-From%3C%26str%3E-for-Variable"],[656,"impl-From%3CIdentifier%3E-for-Variable"],[657,"impl-From%3CString%3E-for-Variable"],[1026,"impl-Display-for-ValidationError"],[1027,"impl-Debug-for-ValidationError"],[1141,"impl-Debug-for-Clause%3C\'a%3E"],[1142,"impl-Display-for-Clause%3C\'_%3E"],[1143,"impl-Display-for-Directive%3C\'_%3E"],[1144,"impl-Debug-for-Directive%3C\'a%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4DLgADAAEADAAHAC4ACwA8AAIARgAAAF4ABgB3AAAAhQAAAJYAAACcAAAArAAAALAAAADDAAAAxgACAMoAAADSAAAA1QACANkAAQDcAAEA5QAAABgBAQAlAQEAZwEBAHQBOwCyAVYAFQIcADUCKgBhAgEAZAIBAGcCAQB7AgAAfQIBAIsCAQCPAgAAkQIBAJUCEgAYA44ArgM9APsDCQALBAcAFAQJACIEBwA3BEIAjgRWAecFAQDrBQoA","P":[[11,"T"],[23,"U"],[27,""],[45,"U,T"],[49,"U"],[53,""],[371,"T"],[431,""],[462,"T"],[491,""],[523,"F"],[524,""],[561,"F"],[563,""],[620,"T"],[634,""],[635,"T"],[636,""],[638,"T"],[650,""],[652,"T"],[654,""],[655,"T"],[656,""],[658,"F"],[659,""],[660,"__H"],[679,""],[680,"U"],[710,""],[791,"T"],[820,""],[844,"U,T"],[874,"U"],[904,""],[1018,"T"],[1022,""],[1023,"T"],[1024,""],[1028,"T"],[1030,"U"],[1032,""],[1034,"T"],[1035,""],[1036,"U,T"],[1038,"U"],[1040,""],[1057,"T"],[1059,""],[1060,"T"],[1061,""],[1065,"T"],[1066,"U"],[1067,""],[1078,"T"],[1079,"U,T"],[1080,"U"],[1081,""],[1101,"T"],[1121,""],[1128,"T"],[1130,""],[1145,"T"],[1155,"U"],[1165,""],[1184,"T"],[1186,""],[1190,"U,T"],[1200,"U"],[1210,""],[1492,"T"],[1496,""],[1499,"T"],[1501,""],[1508,"T"],[1510,"__H"],[1512,"U"],[1514,""],[1517,"T"],[1519,"U,T"],[1521,"U"],[1523,""]]}],["tester",{"t":"H","n":["main"],"q":[[0,"tester"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1059,42647,173]}